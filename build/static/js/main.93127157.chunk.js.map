{"version":3,"sources":["components/SpecialOffer.js","components/BackendConnection.js","components/AllSpecialOffers.js","components/MainPage.js","components/AdminModifyCompanyData.js","components/HeaderComponent.js","components/AdminModifyCustomerData.js","components/AdminModifyOfferData.js","components/AddSupplier.js","components/AdminPage.js","components/Company.js","components/CompaniesPage.js","components/InfoPage.js","components/CustomerFront.js","components/CompanyFront.js","components/SpecialOfferDataBox.js","components/OrderForm.js","components/PrivacyPolicy.js","components/OfferRequest.js","components/CreateSpecialOffer.js","components/CompanySpecialOffer.js","components/MySpecialOffers.js","components/CompOffReqBox.js","components/CompanyOfferRequests.js","components/ModifyCompanyData.js","components/ModifyCustomerData.js","components/CustomerOfferRequests.js","components/Signup.js","components/App.js","reportWebVitals.js","index.js"],"names":["SpecialOffer","id","title","companyName","duration","price","description","Box","className","border","mb","p","Button","color","size","variant","onClick","window","location","href","baseUrl","getAllCompanies","a","axios","get","result","console","log","data","getAllCustomers","getAllSpecialOffers","getOfferRequestsBySupplier","supplier","postSpecialOffer","supplier_name","product_name","product_description","product_price","ends_at","work_hours","is_available","post","then","response","e","catch","error","postNewCustomer","first_name","last_name","street_address","city","postcode","phone","email","password","postNewSupplier","name","supplier_description","postNewOfferRequest","apartment_type","apartment_area","cleaning_frequency","request_suppliers","optional_information","modifyCustomer","customer_id","customer_firstName","customer_lastName","customer_streetAddress","customer_city","customer_postCode","customer_phone","customer_email","put","modifySupplier","supplier_id","modifyOffer","obj","deleteCustomer","delete","deleteSupplier","deleteOffer","AllSpecialOffers","useState","specialOffers","setSpecialOffers","useEffect","BackendConnection","offersListed","length","alert","getAllOffers","specialOfferList","map","offer","product_id","MainPage","useStyles","makeStyles","theme","formControl","minWidth","marginBottom","spacing","selectEmpty","marginTop","AdminModifyCompanyData","cData","update","cDelete","company","setCompany","styles","setName","setPhone","address","setAddress","setPostcode","setCity","setEmail","setDescription","comp","loadCompanyData","modify","style","textAlign","autoComplete","TextField","required","label","value","onChange","event","target","Grid","info","container","m","item","xs","ml","fullWidth","display","button","margin","login","frontLink","textDecoration","HeaderComponent","anchorEl","setAnchorEl","open","setOpen","adminRights","setAdminRights","setPassword","loggedIn","setLoggedIn","handleClose","nav","handleModalClose","handleLogin","status","localStorage","setItem","token","customerId","clickedLogin","clickedLogout","removeItem","handleEmailChange","handlePasswordChange","getItem","classes","AppBar","position","Toolbar","sm","to","Typography","Dialog","maxWidth","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","type","DialogActions","startIcon","currentTarget","Menu","Boolean","transformOrigin","vertical","horizontal","MenuItem","AdminModifyCustomerData","customer","setCustomer","firstName","setFirstName","lastName","setLastName","cust","loadCustomerData","AdminModifyOfferData","oData","oDelete","setOffer","setTitle","setPrice","placeholder","multiline","rows","rowsMax","AddSupplier","checkValues","AdminPage","customersTxt","companiesTxt","offersTxt","supplierTxt","selectedPage","setSelectedPage","customers","setCustomers","companies","setCompanies","offers","setOffers","checkIfAdmin","fetchData","selectedP","customersListed","companiesListed","updateCustomers","updateCompanies","updateOffers","deleteCompany","Company","phonenumber","contactPerson","postnumber","CompaniesPage","props","exampleData","streetAddress","loadCompanyList","companyList","InfoPage","paddingTop","paddingBottom","leftColumn","rightColumn","CustomerFront","Connection","temp","filter","CompanyFront","companyId","backButton","SpecialOfferDataBox","specialOffer","created_at","product_is_available","OrderForm","params","useParams","setSpecialOffer","acceptTerms","setAcceptTerms","parseInt","loadSpecialOfferData","FormControlLabel","control","Checkbox","checked","disabled","PrivacyPolicy","OfferRequest","companyData","setCompanyData","apartmentType","setApartmentType","apartmentArea","setApartmentArea","frequency","setFrequency","suppliers","setSuppliers","additionalInfo","setAdditionalInfo","tempArr","forEach","push","isChecked","tempStr","getRequestedSuppliers","v","FormControl","InputLabel","Select","labelId","OutlinedInput","endAdornment","InputAdornment","component","FormLabel","FormGroup","indexOf","CreateSpecialOffer","setDuration","parseFloat","toFixed","CompanySpecialOffer","MySpecialOffers","loadSpecialOffers","specOffers","spec","reverse","CompOffReqBox","offerReq","isCompany","offerRequest","companyDetails","request_id","CompanyOfferRequests","supplierName","offerRequests","setOfferRequests","loadOfferRequests","offerReqs","req","ModifyCompanyData","ModifyCustomerData","CustomerOfferRequests","customerEmail","Signup","App","loggedInCompanyId","loggedInCustomerId","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93127157.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport \"./styles/SpecialOffer.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst SpecialOffer = ({\n  id,\n  title,\n  companyName,\n  duration,\n  price,\n  description,\n}) => {\n  return (\n    <Box className=\"SpecialOffer\" border={1} mb={2} p={1}>\n      <div className=\"OfferContainer\">\n        <div className=\"FlexIt1\">\n          <h2>{title}</h2>\n          <p>Kesto: {duration}h</p>\n          <p>Hinta: {price}€</p>\n          <p>Yritys: {companyName}</p>\n        </div>\n        <div className=\"FlexIt2\">\n          <Button\n            color=\"secondary\"\n            size=\"large\"\n            variant=\"outlined\"\n            onClick={() => (window.location.href = `/orderform/${id}`)}\n          >\n            Osta diili!{/* <Link to={`/orderform/${id}`}>Osta diili! </Link> */}\n          </Button>\n        </div>\n        <div className=\"FlexIt3\">\n          <p>{description}</p>\n        </div>\n      </div>\n    </Box>\n  );\n};\n\nexport default SpecialOffer;\n","import axios from \"axios\";\n\nconst baseUrl = \"https://clean-buddy.herokuapp.com/api/\";\n//const baseUrl = \"http://localhost:8080/api/\";\n\nconst getAllCompanies = async () => {\n  const result = await axios.get(`${baseUrl}suppliers/`);\n  console.log(\"BackendConnection: Getting all companies\");\n  console.log(result.data);\n  return result.data;\n};\n\nconst getAllCustomers = async () => {\n  const result = await axios.get(`${baseUrl}customers/`);\n  console.log(\"BackendConnection: Getting all customers\");\n  console.log(result.data);\n  return result.data;\n};\n\nconst getAllSpecialOffers = async () => {\n  const result = await axios.get(`${baseUrl}products/`);\n  console.log(\"BackendConnection: Getting all specialoffers.\");\n  console.log(result.data);\n  return result.data;\n};\n\nconst getOfferRequestsBySupplier = async (supplier) => {\n  const result = await axios.get(\n    `${baseUrl}offer-requests?supplier=${supplier}`\n  );\n  console.log(\"BackendConnection: Getting all offer request for supplier.\");\n  console.log(result.data);\n  return result.data;\n};\n\nconst postSpecialOffer = async ({\n  supplier_name,\n  product_name,\n  product_description,\n  product_price,\n  ends_at,\n  work_hours,\n  is_available,\n}) => {\n  console.log(\n    `Posting values to db with axios:\n    ${supplier_name},\n    ${product_name},\n    ${product_description},\n    ${product_price},\n    ${ends_at},\n    ${work_hours},\n    ${is_available}`\n  );\n  const result = await axios\n    .post(`${baseUrl}products/`, {\n      // supplier_name: \"Siivouspojat Oy\",\n      // product_name: \"Juhlasiivous\",\n      // product_description: \"Tarkempi kuvaus juhlasiivouksesta\",\n      // product_price: 100,\n      // ends_at: null,\n      // work_hours: 5,\n      // is_available: true,\n      supplier_name: supplier_name,\n      product_name: product_name,\n      product_description: product_description,\n      product_price: product_price,\n      ends_at: ends_at,\n      work_hours: work_hours,\n      is_available: is_available,\n    })\n    .then(function (response) {\n      try {\n        // your own try...catch block to catch the error before axios ..catch\n        console.log(response);\n      } catch (e) {\n        console.log(e);\n      } // your catch block\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  console.log(result.data);\n  return result.data;\n};\n\nconst postNewCustomer = async ({\n  first_name,\n  last_name,\n  street_address,\n  city,\n  postcode,\n  phone,\n  email,\n  password,\n}) => {\n  console.log(`Sending this data with axios post\n    ${first_name},\n    ${last_name},\n    ${street_address},\n    ${city},\n    ${postcode},\n    ${phone},\n    ${email},\n    ${password}`);\n  const result = await axios\n    .post(`${baseUrl}customers/`, {\n      first_name: first_name,\n      last_name: last_name,\n      street_address: street_address,\n      city: city,\n      postcode: postcode,\n      phone: phone,\n      email: email,\n      password: password,\n    })\n    .then(function (response) {\n      try {\n        // your own try...catch block to catch the error before axios ..catch\n        console.log(response);\n      } catch (e) {\n        console.log(e);\n      } // your catch block\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  //console.log(result.data);\n  return result.data;\n};\n\nconst postNewSupplier = async ({\n  name,\n  supplier_description,\n  street_address,\n  city,\n  postcode,\n  phone,\n  email,\n  password,\n}) => {\n  console.log(`Sending this data with axios post\n    ${name},\n    ${supplier_description},\n    ${street_address},\n    ${city},\n    ${postcode},\n    ${phone},\n    ${email},\n    ${password}`);\n  const result = await axios\n    .post(`${baseUrl}suppliers/`, {\n      name: name,\n      //supplierDescription: supplier_description,\n      //streetAddress: street_address,\n      supplier_description: supplier_description,\n      street_address: street_address,\n      city: city,\n      postcode: postcode,\n      phone: phone,\n      email: email,\n      password: password,\n    })\n    .then(function (response) {\n      try {\n        // your own try...catch block to catch the error before axios ..catch\n        console.log(response);\n      } catch (e) {\n        console.log(e);\n      } // your catch block\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  console.log(result.data);\n  return result.data;\n  //return result[0].data;\n};\n\nconst postNewOfferRequest = async ({\n  apartment_type,\n  apartment_area,\n  cleaning_frequency,\n  request_suppliers,\n  optional_information,\n  first_name,\n  last_name,\n  street_address,\n  city,\n  postcode,\n  phone,\n  email,\n}) => {\n  console.log(`Sending this data with axios post\n    ${apartment_type},\n    ${apartment_area},\n    ${cleaning_frequency},\n    ${request_suppliers}\n    ${optional_information},\n    ${first_name},\n    ${last_name},\n    ${street_address},\n    ${city},\n    ${postcode},\n    ${phone},\n    ${email}`);\n  const result = await axios\n    .post(`${baseUrl}offer-requests/`, {\n      apartment_type: apartment_type,\n      apartment_area: apartment_area,\n      cleaning_frequency: cleaning_frequency,\n      request_suppliers: request_suppliers,\n      optional_information: optional_information,\n      first_name: first_name,\n      last_name: last_name,\n      street_address: street_address,\n      city: city,\n      postcode: postcode,\n      phone: phone,\n      email: email,\n    })\n    .then(function (response) {\n      try {\n        // your own try...catch block to catch the error before axios ..catch\n        console.log(response);\n      } catch (e) {\n        console.log(e);\n      } // your catch block\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  //console.log(result.data);\n  return result.data;\n};\n\nconst modifyCustomer = async (\n  customer_id,\n  customer_firstName,\n  customer_lastName,\n  customer_streetAddress,\n  customer_city,\n  customer_postCode,\n  customer_phone,\n  customer_email,\n) => {\n  const result = await axios.put(`${baseUrl}customers/`, {\n    customer_id: customer_id,\n    first_name: customer_firstName,\n    last_name: customer_lastName,\n    street_address: customer_streetAddress,\n    city: customer_city,\n    postcode: customer_postCode,\n    phone: customer_phone,\n    email: customer_email,\n  })\n  return result.data\n}\n//\"supplier_id\":13,\"\n//\"name\":\"Paska firma\"\n//\"supplier_description\":\": )\"\n//\"street_address\":\"Kikkakuja 16\"\n//\"city\":\"Åbo\"\n//\"postcode\":\"241343\"\n//\"phone\":\"41234324\"\n//\"email\":\"dsdfsd@dsfsd.fds\"}]\nconst modifySupplier = async (\n  supplier_id,\n  name,\n  supplier_description,\n  street_address,\n  city,\n  postcode,\n  phone,\n  email\n) => {\n  const result = await axios.put(`${baseUrl}suppliers/`, {\n    supplier_id: supplier_id,\n    name: name,\n    street_address: street_address,\n    city: city,\n    postcode: postcode,\n    phone: phone,\n    email: email,\n  })\n  return result.data\n}\n\n//not implemented in backend yet\nconst modifyOffer = async (\n\n) => {\n  const result = await axios.put(`${baseUrl}offers`, { //offers url?\n\n  })\n  return result.data\n}\n\nconst deleteCustomer = async (id) => {\n  await axios.delete(`${baseUrl}customers/${id}`)\n  .then(function (response) {\n    try {\n      // your own try...catch block to catch the error before axios ..catch\n      console.log(response);\n    } catch (e) {\n      console.log(e);\n    } // your catch block\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nconst deleteSupplier = async (id) => {\n  await axios.delete(`${baseUrl}suppliers/${id}`)\n  .then(function (response) {\n    try {\n      // your own try...catch block to catch the error before axios ..catch\n      console.log(response);\n    } catch (e) {\n      console.log(e);\n    } // your catch block\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nconst deleteOffer = async (id) => {\n  await axios.delete(`${baseUrl}products/${id}`)\n  .then(function (response) {\n    try {\n      // your own try...catch block to catch the error before axios ..catch\n      console.log(response);\n    } catch (e) {\n      console.log(e);\n    } // your catch block\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nconst obj = {\n  getAllCompanies,\n  getAllCustomers,\n  getAllSpecialOffers,\n  getOfferRequestsBySupplier,\n  postSpecialOffer,\n  postNewCustomer,\n  postNewSupplier,\n  postNewOfferRequest,\n  deleteCustomer,\n  deleteSupplier,\n  deleteOffer,\n  modifySupplier,\n  modifyCustomer,\n  modifyOffer,\n};\nexport default obj;\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles/TextPage.css\";\nimport SpecialOffer from \"./SpecialOffer.js\";\nimport BackendConnection from \"./BackendConnection.js\";\n\nconst AllSpecialOffers = () => {\n  const [specialOffers, setSpecialOffers] = useState([]);\n\n  useEffect(() => {\n    const getAllOffers = async () => {\n      try {\n        const offersListed = await BackendConnection.getAllSpecialOffers();\n        if (offersListed.length === 0) {\n          console.log(\n            \"Got empty list from backend, using example data instead\"\n          );\n        } else {\n          setSpecialOffers(offersListed);\n        }\n      } catch (err) {\n        alert(\"Problem with loading specialoffer data from database\");\n      }\n    };\n    getAllOffers();\n  }, []);\n\n  const specialOfferList = specialOffers.map((offer) => {\n    return (\n      <SpecialOffer\n        key={offer.product_id}\n        id={offer.product_id}\n        title={offer.product_name}\n        //TODO: get real duration from db\n        duration={4}\n        companyName={offer.name}\n        price={offer.product_price}\n        description={offer.product_description}\n      />\n    );\n  });\n\n  return <div>{specialOfferList}</div>;\n};\n\nexport default AllSpecialOffers;\n","import React from \"react\";\nimport AllSpecialOffers from \"./AllSpecialOffers\";\n\nconst MainPage = () => {\n  return (\n    <div>\n      <h1>Tervetuloa CleanBuddyn etusivulle!</h1>\n      <h3>Tässä voimassaolevat pikatarjoukset, nappaa heti omasi.</h3>\n      <AllSpecialOffers />\n    </div>\n  );\n};\n\nexport default MainPage;\n","import { TextField, Button, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/TextPage.css\";\nimport BackendConnection from \"./BackendConnection.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    //margin: theme.spacing(1),\n    minWidth: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst AdminModifyCompanyData = ({ cData, update, cDelete }) => {\n\n  const [company, setCompany] = useState(null);\n\n  const styles = useStyles();\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [postcode, setPostcode] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const fillValues = (comp) => {\n    setName(comp.name);\n    setPhone(comp.phone);\n    setAddress(comp.street_address);\n    setPostcode(comp.postcode);\n    setCity(comp.city);\n    setEmail(comp.email);\n    setDescription(comp.supplier_description);\n  };\n\n  useEffect(() => {\n    const loadCompanyData = async () => {\n      \n        setCompany(cData);\n        fillValues(cData);\n      \n    };\n    loadCompanyData();\n  }, []);\n\n  // Checking that title and description have content and price is positive\n  const checkValues = () => {\n    return (\n      name !== \"\" &&\n      description !== \"\" &&\n      phone !== \"\" &&\n      postcode !== \"\" &&\n      address !== \"\" &&\n      city !== \"\" &&\n      email !== \"\"\n    );\n  };\n\n  const modify = () => {\n    console.log(\"modify\")\n    if (checkValues()) {\n      BackendConnection.modifySupplier(\n        cData.supplier_id,\n        name,\n        address,\n        city,\n        postcode,\n        phone,\n        email);\n        update();\n    } else {\n      alert(\"Please fill all values\")\n    }\n  }\n\n  if (company === null) {\n    return (\n      <div>\n        <h2>Loading data</h2>\n      </div>\n    );\n  } else {\n    return (\n      \n        <div>\n          <div className=\"TextContainer\">\n            <form\n              style={{ textAlign: \"left\", marginBottom: 30 }}\n              autoComplete=\"false\"\n            >\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"modify-name\"\n                label=\"Yrityksen nimi\"\n                //placeholder=\"Yrityksen nimi\"\n                value={name}\n                variant=\"outlined\"\n                onChange={(event) => setName(event.target.value)}\n              />\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"modify-phone\"\n                label=\"Puhelinnumero\"\n                //placeholder=\"Puhelinnumero\"\n                value={phone}\n                variant=\"outlined\"\n                onChange={(event) => setPhone(event.target.value)}\n              />\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"modify-address\"\n                label=\"Osoite\"\n                //placeholder=\"Osoite\"\n                value={address}\n                variant=\"outlined\"\n                onChange={(event) => setAddress(event.target.value)}\n              />\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"modify-postcode\"\n                label=\"Postinumero\"\n                //placeholder=\"Postinumero\"\n                value={postcode}\n                variant=\"outlined\"\n                onChange={(event) => setPostcode(event.target.value)}\n              />\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"modify-city\"\n                label=\"Postitoimipaikka\"\n                //placeholder=\"Postitoimipaikka\"\n                value={city}\n                variant=\"outlined\"\n                onChange={(event) => setCity(event.target.value)}\n              />\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"modify-email\"\n                label=\"Sähköpostiosoite\"\n                //placeholder=\"Sähköpostiosoite\"\n                value={email}\n                variant=\"outlined\"\n                onChange={(event) => setEmail(event.target.value)}\n              />\n              {/* <TextField\n              className={styles.formControl}\n              required\n              id=\"modify-description\"\n              label=\"Kuvaus\"\n              fullWidth\n              multiline\n              rows={4}\n              rowsMax={7}\n              placeholder=\"Yrityksen kuvaus\"\n              variant=\"outlined\"\n              onChange={(event) => setDescription(event.target.value)}\n            /> */}\n            </form>\n            <Grid className={styles.info} container spacing={1} p={2} m={2}>\n              <Grid item xs={6} ml={2}>\n                <Button\n                  variant=\"outlined\"\n                  size=\"large\"\n                  color=\"primary\"\n                  fullWidth\n                  onClick={() => modify()}\n                >\n                  Tallenna\n                </Button>\n              </Grid>\n              <Grid item xs={6}>\n                <Button\n                  variant=\"outlined\"\n                  size=\"large\"\n                  color=\"primary\"\n                  fullWidth\n                  onClick={()=>cDelete()}\n                >\n                  Poista\n                </Button>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n    );\n  }\n};\n\nexport default AdminModifyCompanyData;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Toolbar,\n  Button,\n  Typography,\n  Menu,\n  MenuItem,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: 30,\n    marginBottom: 30,\n    //marginLeft: 20,\n    display: \"block\",\n    textAlign: \"left\",\n  },\n  button: {\n    margin: 10,\n  },\n  login: {\n    //margin: 50,\n  },\n  frontLink: {\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n}));\n\nconst HeaderComponent = () => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [adminRights, setAdminRights] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false)\n\n  // const PORT = (8080 || process.env.PORT)\n\n  // this is not working currently\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n    console.log(\"Clicked menu button\");\n  };\n\n  const handleClose = (nav) => {\n    setAnchorEl(null);\n    console.log(\"nav is\" + nav);\n    window.location.href = nav;\n  };\n  const handleModalOpen = () => {\n    setOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setOpen(false);\n  };\n\n  const handleLogin = async () => {\n    if (email && password) {\n      const login = await axios.post(\n        //`http://localhost:8080/api/auth/signin`,\n        `https://clean-buddy.herokuapp.com/api/auth/signin`,\n        {\n          email: email,\n          password: password\n        }\n      )\n      if (login.status === 204 || login.status === 206) {\n        alert('Väärä sähköposti/salasana');\n      } else if (login.status === 200) {\n        localStorage.setItem('token', login.data.token, 'customerId', login.data.customerId)\n        console.log(login.data.token)\n        setLoggedIn(true)\n        window.location.href = \"/mypage/customer\";\n        handleModalClose();\n      }\n    } else {\n      alert('Anna sähköposti ja salasana')\n    }\n  };\n\n  const clickedLogin = () => {\n    console.log(\"clicked login button\");\n    handleModalOpen();\n  };\n\n  const clickedLogout = () => {\n    setLoggedIn(false);\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"customerId\")\n    window.location.href = \"/\";\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  // if user is admin, dropdown menu will have an Admin button\n  const checkIfAdmin = () => {\n    //TODO\n    //check from backend if current user has admin rights\n    setAdminRights(true);\n  };\n  useEffect(() => {\n    checkIfAdmin();\n  }, []);\n\n  // Checks local storage for user token\n  useEffect(() => {\n    const loggedIn = localStorage.getItem('token')\n    if (loggedIn) {\n      setLoggedIn(true)\n    }\n  }, [])\n \n  const classes = useStyles();\n\n  const loginOrLogoutButton = () => {\n    if (loggedIn === false) {\n      return (\n        <Grid item xs={6} sm={3}>\n          <Button\n            className={classes.button}\n            size=\"large\"\n            variant=\"outlined\"\n            color=\"inherit\"\n            fullWidth\n            onClick={clickedLogin}\n          >\n            Login\n          </Button>\n          <Dialog\n            open={open}\n            maxWidth=\"sm\"\n            onClose={handleModalClose}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"form-dialog-title\">\n              Sisäänkirjautuminen:\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Kirjaudu omille sivuillesi kirjoittamalla sähköpostiosoite ja\n                salasana.\n              </DialogContentText>\n              <TextField\n                required\n                autoFocus\n                variant=\"outlined\"\n                margin=\"normal\"\n                id=\"email\"\n                label=\"Sähköpostiosoite\"\n                type=\"email\"\n                value={email}\n                onChange={handleEmailChange}\n                fullWidth\n              />\n              <TextField\n                required\n                autoFocus\n                variant=\"outlined\"\n                margin=\"normal\"\n                id=\"password\"\n                label=\"Salasana\"\n                type=\"password\"\n                value={password}\n                onChange={handlePasswordChange}\n                fullWidth\n              />\n              <div>\n                <Link to=\"/signup\" onClick={handleModalClose}>\n                  Luo uusi käyttäjätili\n                </Link>\n              </div>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                variant=\"outlined\"\n                onClick={handleModalClose}\n                color=\"primary\"\n              >\n                Peruuta\n              </Button>\n              <Button variant=\"outlined\" onClick={handleLogin} color=\"primary\">\n                Kirjaudu sisään\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Grid>\n      );\n    } else {\n      return (\n        <Grid item xs={6} sm={3}>\n          <Button\n            className={classes.button}\n            size=\"large\"\n            variant=\"outlined\"\n            color=\"inherit\"\n            fullWidth\n            onClick={clickedLogout}\n          >\n            Logout\n          </Button>\n        </Grid>\n      );\n    }\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\n              <div className={classes.title}>\n                <Typography variant=\"h3\">CleanBuddy</Typography>\n                <Typography variant=\"h6\">\n                  Siivouspalvelut helposti netistä\n                </Typography>\n              </div>\n            </Link>\n          </Grid>\n          {loginOrLogoutButton()}\n          <Grid item xs={6} sm={3}>\n            <Button\n              className={classes.button}\n              size=\"large\"\n              variant=\"outlined\"\n              color=\"inherit\"\n              startIcon={<MenuIcon />}\n              onClick={handleClick}\n              fullWidth\n            >\n              Menu\n            </Button>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n              //this line caused an error\n              //anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n\n              transformOrigin={{ vertical: -50, horizontal: 0 }}\n              //aria-label=\"menu\"\n              //aria-haspopup=\"true\"\n            >\n              <MenuItem onClick={() => handleClose(\"/info\")}>\n                Tietoa palvelusta\n              </MenuItem>\n              <MenuItem onClick={() => handleClose(\"/\")}>\n                Pikatarjoukset\n              </MenuItem>\n              <MenuItem onClick={() => handleClose(\"/companies\")}>\n                Palveluntarjoajat\n              </MenuItem>\n              <MenuItem onClick={() => handleClose(\"/offerRequest\")}>\n                Pyydä tarjous\n              </MenuItem>\n              <MenuItem onClick={() => handleClose(\"/privacy\")}>\n                Tietosuojaseloste\n              </MenuItem>\n\n              {adminRights ? (\n                <MenuItem onClick={() => handleClose(\"/admin\")}>Admin</MenuItem>\n              ) : null}\n              <MenuItem onClick={() => handleClose(\"/mypage/customer/\")}>\n                Customer myPages\n              </MenuItem>\n              <MenuItem onClick={() => handleClose(\"/mypage/company/\")}>\n                Company myPages\n              </MenuItem>\n            </Menu>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default HeaderComponent;\n","import { TextField, Button, Grid } from \"@material-ui/core\";\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport React, { useState, useEffect } from \"react\";\nimport HeaderComponent from \"./HeaderComponent\";\nimport BackendConnection from \"./BackendConnection.js\";\nimport \"./styles/TextPage.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    //margin: theme.spacing(1),\n    minWidth: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst AdminModifyCustomerData = ({cData, update, cDelete}) => {\n  const [customer, setCustomer] = useState(null);\n  const styles = useStyles();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [postcode, setPostcode] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const fillValues = (cust) => {\n    setFirstName(cust.first_name);\n    setLastName(cust.last_name);\n    setPhone(cust.phone);\n    setAddress(cust.street_address);\n    setPostcode(cust.postcode);\n    setCity(cust.city);\n    setEmail(cust.email);\n  };\n\n  useEffect(() => {\n    const loadCustomerData = async () => {\n      setCustomer(cData);\n      fillValues(cData);\n      \n    };\n    loadCustomerData();\n  },[]);\n\n\n  const checkValues = () => {\n    return (\n      firstName !== \"\" &&\n      lastName !== \"\" &&\n      phone !== \"\" &&\n      postcode !== \"\" &&\n      address !== \"\" &&\n      city !== \"\" &&\n      email !== \"\"\n    );\n  };\n\n  const modify = () => {\n    console.log(\"modify\")\n      if (checkValues()){\n      BackendConnection.modifyCustomer(\n        cData.customer_id,\n        firstName,\n        lastName,\n        address,\n        city,\n        postcode,\n        phone,\n        email);\n        update();\n      } else {\n      alert(\"Please fill all values\")\n    }\n  }\n\n  if (customer === null) {\n    return(\n      <div>\n        <h2>Loading data</h2>\n      </div>\n    )\n  } else {\n    return(\n      \n        <div>\n          <div className=\"TextContainer\">\n            <form\n              style={{ textAlign: \"left\", marginBottom: 30 }}\n              autoComplete=\"false\"\n            >\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"modify-firstname\"\n                label=\"Etunimi\"\n                value={firstName}\n                variant=\"outlined\"\n                onChange={(event) => setFirstName(event.target.value)}\n              />\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"modify-lastname\"\n                label=\"Sukunimi\"\n                value={lastName}\n                variant=\"outlined\"\n                onChange={(event) => setLastName(event.target.value)}\n              />\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"modify-phone\"\n                label=\"Puhelinnumero\"\n                value={phone}\n                variant=\"outlined\"\n                onChange={(event) => setPhone(event.target.value)}\n              />\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"modify-address\"\n                label=\"Osoite\"\n                value={address}\n                variant=\"outlined\"\n                onChange={(event) => setAddress(event.target.value)}\n              />\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"modify-postcode\"\n                label=\"Postinumero\"\n                value={postcode}\n                variant=\"outlined\"\n                onChange={(event) => setPostcode(event.target.value)}\n              />\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"modify-city\"\n                label=\"Postitoimipaikka\"\n                value={city}\n                variant=\"outlined\"\n                onChange={(event) => setCity(event.target.value)}\n              />\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"modify-email\"\n                label=\"Sähköpostiosoite\"\n                value={email}\n                variant=\"outlined\"\n                onChange={(event) => setEmail(event.target.value)}\n              />\n            </form>\n            <Grid className={styles.info} container spacing={1} p={2} m={2}>\n              <Grid item xs={6} ml={2}>\n                <Button\n                  variant=\"outlined\"\n                  size=\"large\"\n                  color=\"primary\"\n                  fullWidth\n                  onClick={() => modify()}\n                >\n                  Tallenna\n                </Button>\n              </Grid>\n              <Grid item xs={6}>\n                <Button\n                  variant=\"outlined\"\n                  size=\"large\"\n                  color=\"primary\"\n                  fullWidth\n                  onClick={() => cDelete()}\n                >\n                  Poista\n                </Button>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      \n    )\n  }\n}\n\nexport default AdminModifyCustomerData;","import { TextField, Button, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/TextPage.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    //margin: theme.spacing(1),\n    minWidth: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\n/*\ncreated_at: \"2021-04-29T10:16:16.000Z\"\n\nends_at: \"0000-00-00\"\n\nproduct_description: \"Siivoon\"\n\nproduct_id: 16\n\nproduct_is_available: 0\n\nproduct_name: \"Mä tuun siivoon\"\n\nproduct_price: 2.5\n\nsupplier_id: null\n\nwork_hours: 0\n*/\n\nconst AdminModifyOfferData = ({ oData, update, oDelete }) => {\n  const [offer, setOffer] = useState(null);\n  const styles = useStyles();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(100);\n  //TODO: Change duration to real duration\n  //const [duration, setDuration] = useState(3);\n\n  const fillValues = (comp) => {\n    setTitle(comp.product_name);\n    setDescription(comp.product_description);\n    setPrice(comp.product_price);\n    //setDuration(comp.postcode);\n    \n  };\n\n  useEffect(() => {\n    const loadCompanyData = async () => {\n      \n        setOffer(oData);\n        fillValues(oData);\n      \n    };\n    loadCompanyData();\n  }, []);\n\n  // Checking that title and description have content and price is positive\n  const checkValues = () => {\n    return title !== \"\" && description !== \"\" && price >= 0;\n  };\n\n  return (\n      <div>\n        <div className=\"TextContainer\">\n          <form\n            style={{ textAlign: \"left\", marginBottom: 30 }}\n            autoComplete=\"false\"\n          >\n            <TextField\n              className={styles.formControl}\n              required\n              id=\"special-offer-title\"\n              label=\"Otsikko\"\n              placeholder=\"Otsikko\"\n              value={title}\n              variant=\"outlined\"\n              onChange={(event) => setTitle(event.target.value)}\n            />\n            <TextField\n              className={styles.formControl}\n              required\n              id=\"special-offer-price\"\n              label=\"Hinta\"\n              placeholder=\"Hinta\"\n              value={price}\n              variant=\"outlined\"\n              onChange={(event) => setPrice(event.target.value)}\n            />\n            <TextField\n              className={styles.formControl}\n              required\n              id=\"description\"\n              label=\"Kuvaus\"\n              fullWidth\n              multiline\n              rows={4}\n              rowsMax={7}\n              placeholder=\"Anna tarkempi kuvaus siivouksen yksityiskohdista.\"\n              value={description}\n              variant=\"outlined\"\n              onChange={(event) => setDescription(event.target.value)}\n            />\n          </form>\n          <Grid className={styles.info} container spacing={1} p={2} m={2}>\n            <Grid item xs={6} ml={2}>\n              <Button\n                variant=\"outlined\"\n                size=\"large\"\n                color=\"primary\"\n                fullWidth\n                onClick={() => update()}\n              >\n                Tallenna\n              </Button>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"outlined\"\n                size=\"large\"\n                color=\"primary\"\n                fullWidth\n                onClick={() => oDelete()}\n              >\n                Poista\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n  );\n}\n\nexport default AdminModifyOfferData;","import { TextField, Button, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState, useEffect } from \"react\";\nimport BackendConnection from \"./BackendConnection.js\";\nimport \"./styles/TextPage.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    //margin: theme.spacing(1),\n    minWidth: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst AddSupplier = () => {\n  // const exampledata = {\n  //   id: 1,\n  //   name: \"Siivouspojat Ab\",\n  //   contactPerson: \"Jussi Mäkinen\",\n  //   phone: \"040 5544671\",\n  //   street_address: \"Mäkitie 3\",\n  //   postcode: \"36100\",\n  //   city: \"Tampere\",\n  //   email: \"asiakaspalvelu@siivouspojat.fi\",\n  //   supplier_description: \"Tehdään loistavaa jälkeä\",\n  // };\n\n  const styles = useStyles();\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [postcode, setPostcode] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleClick = () => {\n    //TODO: send data to db\n    // (name, supplierDescription, streetAddress, city, postcode, phone, email, password)\n    if (checkValues()) {\n      console.log(\"post values and go to adminpage\");\n      console.log(`Sending this data with axios post\n        ${name},\n        ${description},\n        ${address},\n        ${city},\n        ${postcode},\n        ${phone},\n        ${email},\n        ${password}`);\n      BackendConnection.postNewSupplier({\n        name: name,\n        //supplierDescription: description,\n        supplier_description: description,\n        //streetAddress: address,\n        street_address: address,\n        city: city,\n        postcode: postcode,\n        phone: phone,\n        email: email,\n        password: password,\n\n        /*\n        //testData\n        name: \"test\",\n        //supplierDescription: \"test\",\n        supplier_description: \"test\",\n        //streetAddress: \"test\",\n        street_address: \"test\",\n        city: \"test\",\n        postcode: 12345,\n        phone: 12345,\n        email: \"test@test.fi\",\n        password: \"test\",\n*/\n      });\n      window.location.href = \"/admin\";\n    } else {\n      alert(\"Jokin kenttä on jätetty tyhjäksi, tarkista tiedot.\");\n    }\n  };\n\n  // Checking that title and description have content and price is positive\n  const checkValues = () => {\n    return (\n      name !== \"\" &&\n      description !== \"\" &&\n      phone !== \"\" &&\n      postcode !== \"\" &&\n      address !== \"\" &&\n      city !== \"\" &&\n      email !== \"\" &&\n      description !== \"\"\n    );\n  };\n\n  return (\n    <div>\n      <h1>Täytä uuden yrityskäyttäjän tiedot:</h1>\n      <div className=\"TextContainer\">\n        <form\n          style={{ textAlign: \"left\", marginBottom: 30 }}\n          autoComplete=\"false\"\n        >\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"modify-name\"\n            label=\"Yrityksen nimi\"\n            //placeholder=\"Yrityksen nimi\"\n            variant=\"outlined\"\n            onChange={(event) => setName(event.target.value)}\n          />\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"modify-phone\"\n            label=\"Puhelinnumero\"\n            //placeholder=\"Puhelinnumero\"\n            variant=\"outlined\"\n            onChange={(event) => setPhone(event.target.value)}\n          />\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"modify-address\"\n            label=\"Osoite\"\n            //placeholder=\"Osoite\"\n            variant=\"outlined\"\n            onChange={(event) => setAddress(event.target.value)}\n          />\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"modify-postcode\"\n            label=\"Postinumero\"\n            //placeholder=\"Postinumero\"\n            variant=\"outlined\"\n            onChange={(event) => setPostcode(event.target.value)}\n          />\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"modify-city\"\n            label=\"Postitoimipaikka\"\n            //placeholder=\"Postitoimipaikka\"\n            variant=\"outlined\"\n            onChange={(event) => setCity(event.target.value)}\n          />\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"modify-email\"\n            label=\"Sähköpostiosoite\"\n            //placeholder=\"Sähköpostiosoite\"\n            variant=\"outlined\"\n            onChange={(event) => setEmail(event.target.value)}\n          />\n          <TextField\n            className={styles.formControl}\n            required\n            type=\"password\"\n            id=\"add-password\"\n            label=\"Salasana\"\n            variant=\"outlined\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"modify-description\"\n            label=\"Yrityksen kuvaus\"\n            fullWidth\n            multiline\n            rows={4}\n            rowsMax={7}\n            //placeholder=\"Yrityksen kuvaus\"\n            variant=\"outlined\"\n            onChange={(event) => setDescription(event.target.value)}\n          />\n        </form>\n        <Grid className={styles.info} container spacing={1} p={2} m={2}>\n          <Grid item xs={6} ml={2}>\n            <Button\n              variant=\"outlined\"\n              size=\"large\"\n              color=\"primary\"\n              fullWidth\n              // TODO: go somewhere or something\n              onClick={() => (window.location.href = \"/admin\")}\n            >\n              Takaisin\n            </Button>\n          </Grid>\n          <Grid item xs={6}>\n            <Button\n              variant=\"outlined\"\n              size=\"large\"\n              color=\"primary\"\n              fullWidth\n              onClick={handleClick}\n            >\n              Lisää yritys\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default AddSupplier;\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles/TextPage.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport BackendConnection from \"./BackendConnection\";\nimport AdminModifyCompanyData from \"./AdminModifyCompanyData\";\nimport AdminModifyCustomerData from \"./AdminModifyCustomerData\";\nimport AdminModifyOfferData from \"./AdminModifyOfferData\";\nimport AddSupplier from \"./AddSupplier\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    //margin: theme.spacing(1),\n    minWidth: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst AdminPage = () => {\n  const styles = useStyles();\n  const customersTxt = \"Asiakkaat\";\n  const companiesTxt = \"Palveluntarjoajat\";\n  const offersTxt = \"Pikatarjoukset\";\n  //placeholder text\n  const supplierTxt = \"Lisää yritys\";\n\n  const [adminRights, setAdminRights] = useState(false);\n  const [selectedPage, setSelectedPage] = useState(customersTxt);\n  const [customers, setCustomers] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [offers, setOffers] = useState([]);\n  //const []\n\n  useEffect(() => {\n    const checkIfAdmin = async () => {\n      //TODO\n      //check from backend if current user has admin rights\n      const result = true;\n      setAdminRights(result);\n    };\n    checkIfAdmin();\n    if (adminRights) {\n      fetchData();\n    }\n  }, [adminRights, selectedPage]);\n\n  const fetchData = async () => {\n    try {\n      const customersListed = await BackendConnection.getAllCustomers();\n      const companiesListed = await BackendConnection.getAllCompanies();\n      const offersListed = await BackendConnection.getAllSpecialOffers();\n      setCustomers(customersListed);\n      setCompanies(companiesListed);\n      setOffers(offersListed);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const updateCustomers = async () => {\n    await BackendConnection.getAllCustomers();\n  }\n  const updateCompanies = async () => {\n    await BackendConnection.getAllCompanies();\n  }\n  const updateOffers = async () => {\n    await BackendConnection.getAllSpecialOffers();\n  }\n\n  const deleteCustomer = async (id) => {\n    await BackendConnection.deleteCustomer(id);//.then;\n    //setSelectedPage([]);\n    //setSelectedPage(customersTxt);\n  };\n  const deleteCompany = async (id) => {\n    await BackendConnection.deleteSupplier(id);//.then;\n    //setSelectedPage([]);\n    //setSelectedPage(companiesTxt);\n  };\n  const deleteOffer = async (id) => {\n    await BackendConnection.deleteOffer(id);//.then;\n    //setSelectedPage([]);\n    //setSelectedPage(offersTxt);\n  };\n\n  const getContent = (selectedP) => {\n    if (selectedP == customersTxt) {\n      return (\n        <div>\n          <h1>Muokkaa asiakastietoja:</h1>\n\n          {customers.map((data) => (\n            <ul key={data.customer_id}>\n              <AdminModifyCustomerData\n                cData = {data}\n                update = {() => updateCustomers()}\n                cDelete = {() => deleteCustomer(data.customer_id)}\n              />\n            </ul>\n          ))}\n        </div>\n      );\n    } else if (selectedPage == companiesTxt) {\n      return (\n        <div>\n          <h1>Muokkaa yritystietoja:</h1>\n\n          {companies.map((data) => (\n            <ul key={data.supplier_id}>\n              <AdminModifyCompanyData\n                cData = {data}\n                update = {() => updateCompanies()}\n                cDelete = {() => deleteCompany(data.supplier_id)}\n              />\n            </ul>\n          ))}\n        </div>\n      );\n    } else if (selectedPage == offersTxt) {\n      //product_id\n      return (\n        <div>\n          <h1>Muokkaa tarjoustietoja:</h1>\n          {/*product_id*/}\n          {offers.map((data) => (\n            <ul key={data.product_id}>\n              <AdminModifyOfferData\n                oData = {data}\n                update = {() => updateOffers()}\n                oDelete = {() => deleteOffer(data.product_id)}\n              />\n            </ul>\n          ))}\n        </div>\n      );\n    } else if (selectedPage == supplierTxt) {\n      return (\n        <div>\n          <AddSupplier />\n        </div>\n      );\n    }\n    // works as a pageswitcher -> reload data (useEffect)\n      // or maybe it doesnt, idk, everythings a mess\n    else {\n      return (\n        <div>\n          <p>Loading</p>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      {adminRights ? (\n        <div>\n          <div>\n            <br />\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              color={selectedPage == supplierTxt ? \"primary\" : \"default\"}\n              onClick={() => setSelectedPage(supplierTxt)}\n            >\n              {supplierTxt}\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              color={selectedPage == customersTxt ? \"primary\" : \"default\"}\n              onClick={() => setSelectedPage(customersTxt)}\n            >\n              {customersTxt}\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              color={selectedPage == companiesTxt ? \"primary\" : \"default\"}\n              onClick={() => setSelectedPage(companiesTxt)}\n            >\n              {companiesTxt}\n            </Button>\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              color={selectedPage == offersTxt ? \"primary\" : \"default\"}\n              onClick={() => setSelectedPage(offersTxt)}\n            >\n              {offersTxt}\n            </Button>\n            <br />\n            {getContent(selectedPage)}\n          </div>\n        </div>\n      ) : (\n        <div>\n          <p>Not Admin user</p>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default AdminPage;\n","import React, { useState, useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport \"./styles/Company.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Company = ({\n  id,\n  name,\n  contactPerson,\n  phonenumber,\n  address,\n  postnumber,\n  city,\n  email,\n  description,\n}) => {\n  return (\n    <Box className=\"Company\" border={1} mb={2} p={1}>\n      <div className=\"FlexContainer\">\n        <div className=\"FlexItem1\">\n          <h2>{name}</h2>\n          <p>{address}</p>\n          <p>\n            {postnumber} {city}\n          </p>\n          <p>{phonenumber}</p>\n          <p>{email}</p>\n        </div>\n        <div className=\"FlexItem2\">\n          <div className=\"offerLink\">\n            <Link to=\"/offerRequest\">Pyydä tarjous</Link>\n          </div>\n          <p className=\"descField\">{description}</p>\n        </div>\n      </div>\n    </Box>\n  );\n};\n\nexport default Company;\n","import React, { useState, useEffect } from \"react\";\nimport Company from \"./Company\";\nimport BackendConnection from \"./BackendConnection\";\n\nconst CompaniesPage = (props) => {\n  const [companies, setCompanies] = useState([]);\n\n  useEffect(() => {\n    const exampleData = [\n      {\n        id: 1,\n        name: \"Siivouspojat Ab\",\n        contactPerson: \"Jussi Mäkinen\",\n        phone: \"040 5544671\",\n        streetAddress: \"Mäkitie 3\",\n        postcode: \"36100\",\n        city: \"Tampere\",\n        email: \"asiakaspalvelu@siivouspojat.fi\",\n        supplier_description: \"Tehdään loistavaa jälkeä\",\n      },\n      {\n        id: 2,\n        name: \"Duunia Pukkaa Ky\",\n        contactPerson: \"Reiska Taipale\",\n        phone: \"040 5544671\",\n        streetAddress: \"Koivukuja 155\",\n        postcode: \"13340\",\n        city: \"Salo\",\n        email: \"reiskahoitaa@yahoo.com\",\n        supplier_description: \"Siivotaan kun ehditään\",\n      },\n    ];\n    const loadCompanyList = async () => {\n      try {\n        const companiesListed = await BackendConnection.getAllCompanies();\n        if (companiesListed.length === 0) {\n          console.log(\n            \"Got empty list from backend, using example data instead\"\n          );\n          setCompanies(exampleData);\n        } else {\n          setCompanies(companiesListed);\n        }\n      } catch (err) {\n        console.log(\"Error situation, using example data now.\");\n        setCompanies(exampleData);\n        alert(\"Problem with loading supplier data from database\");\n      }\n    };\n    loadCompanyList();\n  }, []);\n  const companyList = /*props.allCompanies.*/ companies.map((company) => {\n    return (\n      <Company\n        key={company.name}\n        name={company.name}\n        address={company.street_address}\n        postnumber={company.postcode}\n        city={company.city}\n        phonenumber={company.phone}\n        email={company.email}\n        description={company.supplier_description}\n      />\n    );\n  });\n  return (\n    <div>\n      <h1>Palveluntarjoajat:</h1>\n      {companyList}\n      {/* <Company\n          name=\"Yritys Oy\"\n          address=\"Mäkikatu 3\"\n          postnumber=\"33100\"\n          city=\"Tampere\"\n          phonenumber=\"040 81544734\"\n          email=\"info@yritys.com\"\n          description=\"Phasellus tristique massa eget arcu mollis pellentesque. Maecenas imperdiet blandit lobortis. Aenean scelerisque in ipsum quis lacinia. Nullam auctor interdum nibh, ut ultricies purus suscipit non. Integer mattis mollis feugiat. Duis fringilla orci interdum, facilisis ex vitae, tempus turpis. Donec imperdiet, urna ac euismod dapibus, magna metus convallis risus, sed rhoncus diam risus at risus.\"\n        />\n        <Company\n          name=\"Siivouspojat Ab\"\n          address=\"Liinakatu 33\"\n          postnumber=\"33450\"\n          city=\"Tampere\"\n          phonenumber=\"040 81534734\"\n          email=\"asiakaspalvelu@siivouspojat.fi\"\n          description=\"Phasellus tristique massa eget arcu mollis pellentesque. Maecenas imperdiet blandit lobortis. Aenean scelerisque in ipsum quis lacinia. Nullam auctor interdum nibh, ut ultricies purus suscipit non. Integer mattis mollis feugiat. Duis fringilla orci interdum, facilisis ex vitae, tempus turpis. Donec imperdiet, urna ac euismod dapibus, magna metus convallis risus, sed rhoncus diam risus at risus.\"\n        />\n        <Company\n          name=\"DuuniaPukkaa Ky\"\n          address=\"Kylmäsenkuja 167 b\"\n          postnumber=\"33150\"\n          city=\"Valkeakoski\"\n          phonenumber=\"040 66544734\"\n          email=\"reiska@yahoo.com\"\n          description=\"Phasellus tristique massa eget arcu mollis pellentesque. Maecenas imperdiet blandit lobortis. Aenean scelerisque in ipsum quis lacinia. Nullam auctor interdum nibh, ut ultricies purus suscipit non. Integer mattis mollis feugiat. Duis fringilla orci interdum, facilisis ex vitae, tempus turpis. Donec imperdiet, urna ac euismod dapibus, magna metus convallis risus, sed rhoncus diam risus at risus.\"\n        /> */}\n    </div>\n  );\n};\n\nexport default CompaniesPage;\n","import React from \"react\";\nimport \"./styles/TextPage.css\";\n\nconst InfoPage = () => {\n  return (\n    <div>\n      <h1>Infoa tästä palvelusta</h1>\n      <div className=\"TextContainer\">\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris\n          accumsan ex turpis, ac euismod odio congue sed. Sed placerat varius\n          commodo. Quisque tempor nisi ac volutpat accumsan. Pellentesque\n          tincidunt quam nibh, sit amet aliquet lacus egestas eget. Aliquam in\n          turpis bibendum, faucibus risus quis, mattis arcu. Maecenas dapibus\n          varius leo id tristique. Nunc massa nulla, lobortis nec est suscipit,\n          suscipit ornare velit. Vivamus ac lacus metus. Proin sed enim sodales,\n          efficitur nulla id, iaculis ipsum. Quisque fermentum erat ut sem\n          tincidunt tempor. Nullam commodo semper leo eu consequat. Integer et\n          mattis sem, at scelerisque turpis.\n        </p>\n        <p>\n          Phasellus tristique massa eget arcu mollis pellentesque. Maecenas\n          imperdiet blandit lobortis. Aenean scelerisque in ipsum quis lacinia.\n          Nullam auctor interdum nibh, ut ultricies purus suscipit non. Integer\n          mattis mollis feugiat. Duis fringilla orci interdum, facilisis ex\n          vitae, tempus turpis. Donec imperdiet, urna ac euismod dapibus, magna\n          metus convallis risus, sed rhoncus diam risus at risus.\n        </p>\n        <p>\n          Cras sem dui, tempus posuere tristique sit amet, iaculis eget purus.\n          Quisque ligula nibh, luctus vitae fermentum vel, porttitor rhoncus\n          eros. Pellentesque congue dolor a tortor aliquet dictum. Sed ac\n          lacinia lorem. Nullam tristique metus non sapien maximus lacinia. Cras\n          in convallis augue. Integer posuere varius nibh sit amet venenatis.\n          Duis tristique augue massa, eleifend feugiat est ornare et. Duis sit\n          amet est posuere, auctor ligula sit amet, semper nisl. Sed a sem et\n          ligula bibendum malesuada. Nunc auctor feugiat leo, eu pharetra tortor\n          facilisis non. Praesent porttitor consequat quam nec condimentum.\n          Donec a ligula facilisis velit molestie tempus.\n        </p>\n        <p>\n          Donec dictum, arcu non consequat elementum, quam augue rhoncus neque,\n          id auctor lorem elit in justo. Integer luctus libero non enim\n          efficitur accumsan vel eget enim. Phasellus lacus tortor, consectetur\n          vel augue ac, pharetra ornare augue. Etiam ac egestas nunc, vitae\n          tempus justo. Proin nec pellentesque nisl, nec ultrices urna.\n          Pellentesque volutpat eu justo in luctus.\n        </p>\n        <p>\n          Quisque ut ipsum nunc. Mauris efficitur felis ac mauris pellentesque,\n          at laoreet ligula porta. Class aptent taciti sociosqu ad litora\n          torquent per conubia nostra, per inceptos himenaeos. Ut gravida, nisl\n          euismod auctor mattis, turpis dolor lobortis neque, non venenatis ante\n          ex sit amet ligula. In mauris dui, blandit sed pretium nec, dignissim\n          sed orci. Fusce posuere hendrerit facilisis. Etiam vel est laoreet,\n          ullamcorper libero non, aliquam nisl. Nam sollicitudin est a porta\n          pretium. Integer ante ex, volutpat sit amet erat nec, posuere tempus\n          felis. Sed sagittis mollis arcu, eget blandit metus convallis ut. Sed\n          velit tortor, mollis non nibh dignissim, euismod facilisis magna.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default InfoPage;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport Connection from \"./BackendConnection\";\nimport { Grid, Box, Button } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/TextPage.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  info: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  leftColumn: {\n    textAlign: \"right\",\n  },\n  rightColumn: {\n    textAlign: \"left\",\n  },\n}));\n\nconst CustomerFront = ({ customerId }) => {\n  const styles = useStyles();\n\n  // const exampleData = {\n  //   customer_id: 1,\n  //   first_name: \"Pasi\",\n  //   last_name: \"Virtanen\",\n  //   street_address: \"Kotikatu 3 A\",\n  //   city: \"Tampere\",\n  //   postcode: \"33310\",\n  //   phone: \"+42312231\",\n  //   email: \"email@email.com\",\n  // };\n\n  const [customer, setCustomer] = useState(null);\n\n  useEffect(() => {\n    // Load all companies from database and search with given props companyId\n    const loadCustomerData = async () => {\n      const temp = await Connection.getAllCustomers();\n      if (temp.length > 0) {\n        temp.filter((cust) => cust.customer_id === customerId);\n        setCustomer(temp[0]);\n      }\n    };\n    loadCustomerData();\n  }, [customerId]);\n\n  if (customer === null) {\n    return (\n      <div>\n        <h2>Loading data</h2>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <h1>Tervetuloa omille sivuille {customer.first_name}!</h1>\n        <Box m={1} p={2}>\n          <Grid className={styles.info} container spacing={1} p={2} mb={2}>\n            <Grid item xs={12} sm={6}>\n              <Button\n                variant=\"outlined\"\n                size=\"large\"\n                color=\"primary\"\n                fullWidth\n                //onClick={() => (window.location.href = \"/\")}\n              >\n                Ostohistoria\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Button\n                variant=\"outlined\"\n                size=\"large\"\n                color=\"primary\"\n                fullWidth\n                onClick={() =>\n                  (window.location.href = \"/mypage/customer/myofferrequests\")\n                }\n              >\n                Katso tarjouspyynnöt\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n        <h3>Tässä on asiakkaan yhteystiedot.</h3>\n        <Box border={1} m={2} p={1}>\n          <Grid className={styles.info} container spacing={1} p={2} mb={2}>\n            <Grid className={styles.leftColumn} item xs={4} sm={5}>\n              Nimi:\n            </Grid>\n            <Grid item xs={1} />\n            <Grid className={styles.rightColumn} item xs={7} sm={6}>\n              {customer.first_name} {customer.last_name}\n            </Grid>\n            <Grid className={styles.leftColumn} item xs={4} sm={5}>\n              Puhelinnumero:\n            </Grid>\n            <Grid item xs={1} />\n            <Grid className={styles.rightColumn} item xs={7} sm={6}>\n              {customer.phone}\n            </Grid>\n            <Grid className={styles.leftColumn} item xs={4} sm={5}>\n              Osoite:\n            </Grid>\n            <Grid item xs={1} />\n            <Grid className={styles.rightColumn} item xs={7} sm={6}>\n              {customer.street_address}\n            </Grid>\n            <Grid className={styles.leftColumn} item xs={4} sm={5}>\n              Postinumero:\n            </Grid>\n            <Grid item xs={1} />\n            <Grid className={styles.rightColumn} item xs={7} sm={6}>\n              {customer.postcode}\n            </Grid>\n            <Grid className={styles.leftColumn} item xs={4} sm={5}>\n              Postitoimipaikka:\n            </Grid>\n            <Grid item xs={1} />\n            <Grid className={styles.rightColumn} item xs={7} sm={6}>\n              {customer.city}\n            </Grid>\n            <Grid className={styles.leftColumn} item xs={4} sm={5}>\n              Sähköpostiosoite:\n            </Grid>\n            <Grid item xs={1} />\n            <Grid className={styles.rightColumn} item xs={7} sm={6}>\n              {customer.email}\n            </Grid>\n          </Grid>\n          <div className={styles.info}>\n            <Button\n              variant=\"outlined\"\n              size=\"large\"\n              color=\"primary\"\n              onClick={() =>\n                (window.location.href = \"/mypage/customer/modifydata\")\n              }\n            >\n              Muokkaa tietoja\n            </Button>\n          </div>\n        </Box>\n        {/* <Box border={1} m={2} p={3}>\n          <div>Data from database is now: {JSON.stringify(customer)}</div>\n        </Box> */}\n      </div>\n    );\n  }\n};\n\nexport default CustomerFront;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/TextPage.css\";\nimport Connection from \"./BackendConnection\";\nimport { Grid, Box, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  info: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  leftColumn: {\n    textAlign: \"right\",\n  },\n  rightColumn: {\n    textAlign: \"left\",\n  },\n}));\n\nconst CompanyFront = ({ companyId }) => {\n  const styles = useStyles();\n\n  // const exampleData = {\n  //   id: 1,\n  //   name: \"Siivouspojat Ab\",\n  //   contactPerson: \"Jussi Mäkinen\",\n  //   phone: \"040 5544671\",\n  //   street_address: \"Mäkitie 3\",\n  //   postcode: \"36100\",\n  //   city: \"Tampere\",\n  //   email: \"asiakaspalvelu@siivouspojat.fi\",\n  //   description: \"Tehdään loistavaa jälkeä\",\n  // };\n\n  const [company, setCompany] = useState(null);\n\n  useEffect(() => {\n    // Load all companies from database and search with given props companyId\n    const loadCompanyData = async () => {\n      const temp = await Connection.getAllCompanies();\n      if (temp.length > 0) {\n        temp.filter((comp) => comp.supplier_id === companyId);\n        setCompany(temp[0]);\n      }\n    };\n    loadCompanyData();\n  }, [companyId]);\n\n  if (company === null) {\n    return (\n      <div>\n        <h2>Loading data</h2>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <h1>Tervetuloa yrityksen omille sivuille!</h1>\n        <Box m={1} p={2}>\n          <Grid className={styles.info} container spacing={1} p={2} mb={2}>\n            <Grid item xs={12} sm={6}>\n              <Button\n                variant=\"outlined\"\n                size=\"large\"\n                color=\"primary\"\n                fullWidth\n                onClick={() =>\n                  (window.location.href = \"/mypage/company/createspecialoffer\")\n                }\n              >\n                Luo pikatarjous\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Button\n                variant=\"outlined\"\n                size=\"large\"\n                color=\"primary\"\n                fullWidth\n                onClick={() =>\n                  (window.location.href = \"/mypage/company/myofferrequests\")\n                }\n              >\n                Katso tarjouspyynnöt\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Button\n                variant=\"outlined\"\n                size=\"large\"\n                color=\"primary\"\n                fullWidth\n                onClick={() =>\n                  (window.location.href = \"/mypage/company/myspecialoffers\")\n                }\n              >\n                Omat pikatarjoukset\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n        <h3>Tässä on yrityksen yhteystiedot.</h3>\n        <Box border={1} m={2} p={1}>\n          <Grid className={styles.info} container spacing={1} p={2} mb={2}>\n            <Grid className={styles.leftColumn} item xs={4} sm={5}>\n              Yrityksen nimi:\n            </Grid>\n            <Grid item xs={1} />\n            <Grid className={styles.rightColumn} item xs={7} sm={6}>\n              {company.name}\n            </Grid>\n            <Grid className={styles.leftColumn} item xs={4} sm={5}>\n              Yhteyshenkilö:\n            </Grid>\n            <Grid item xs={1} />\n            <Grid className={styles.rightColumn} item xs={7} sm={6}>\n              {company.contactPerson}\n            </Grid>\n            <Grid className={styles.leftColumn} item xs={4} sm={5}>\n              Puhelinnumero:\n            </Grid>\n            <Grid item xs={1} />\n            <Grid className={styles.rightColumn} item xs={7} sm={6}>\n              {company.phone}\n            </Grid>\n            <Grid className={styles.leftColumn} item xs={4} sm={5}>\n              Osoite:\n            </Grid>\n            <Grid item xs={1} />\n            <Grid className={styles.rightColumn} item xs={7} sm={6}>\n              {company.street_address}\n            </Grid>\n            <Grid className={styles.leftColumn} item xs={4} sm={5}>\n              Postinumero:\n            </Grid>\n            <Grid item xs={1} />\n            <Grid className={styles.rightColumn} item xs={7} sm={6}>\n              {company.postcode}\n            </Grid>\n            <Grid className={styles.leftColumn} item xs={4} sm={5}>\n              Postitoimipaikka:\n            </Grid>\n            <Grid item xs={1} />\n            <Grid className={styles.rightColumn} item xs={7} sm={6}>\n              {company.city}\n            </Grid>\n            <Grid className={styles.leftColumn} item xs={4} sm={5}>\n              Sähköpostiosoite:\n            </Grid>\n            <Grid item xs={1} />\n            <Grid className={styles.rightColumn} item xs={7} sm={6}>\n              {company.email}\n            </Grid>\n          </Grid>\n          <div className={styles.info}>\n            <Button\n              variant=\"outlined\"\n              size=\"large\"\n              color=\"primary\"\n              onClick={() =>\n                (window.location.href = \"/mypage/company/modifydata\")\n              }\n            >\n              Muokkaa tietoja\n            </Button>\n          </div>\n        </Box>\n        {/* <Box border={1} m={2} p={3}>\n          <div>Data from database is now: {JSON.stringify(company)}</div>\n        </Box> */}\n      </div>\n    );\n  }\n};\n\nexport default CompanyFront;\n","import { Button, Grid, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState, useEffect } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  backButton: {\n    textAlign: \"center\",\n    marginTop: 15,\n  },\n  leftColumn: {\n    textAlign: \"right\",\n  },\n  rightColumn: {\n    textAlign: \"left\",\n  },\n}));\n\nconst SpecialOfferDataBox = ({ specialOffer }) => {\n  const styles = useStyles();\n\n  if (specialOffer !== null) {\n    return (\n      <Box border={1} m={1} p={2}>\n        <Grid className={styles.info} container spacing={1} p={2} mb={2}>\n          <Grid className={styles.leftColumn} item xs={5}>\n            ID:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {specialOffer.product_id}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Otsikko:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {specialOffer.product_name}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Kuvaus:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {specialOffer.product_description}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Siivoustunnit:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {specialOffer.work_hours}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Kokonaishinta:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {specialOffer.product_price}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Luotu:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {specialOffer.created_at}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Päättyy:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {specialOffer.ends_at}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Tarjous voimassa:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {specialOffer.product_is_available}\n          </Grid>\n        </Grid>\n      </Box>\n    );\n  }\n};\n\nexport default SpecialOfferDataBox;\n","import TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { Link, useParams } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/TextPage.css\";\nimport SpecialOfferDataBox from \"./SpecialOfferDataBox\";\nimport BackendConnection from \"./BackendConnection\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    minWidth: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst OrderForm = () => {\n  let params = useParams();\n  const styles = useStyles();\n  const [specialOffer, setSpecialOffer] = useState(null);\n  const [acceptTerms, setAcceptTerms] = useState(false);\n\n  useEffect(() => {\n    // Load all companies from database and search with given props companyId\n    const loadSpecialOfferData = async () => {\n      const temp = await BackendConnection.getAllSpecialOffers();\n      if (temp.length > 0) {\n        console.log(params.id);\n        const value = temp.filter(\n          (offer) => offer.product_id === parseInt(params.id)\n        );\n        setSpecialOffer(value[0]);\n      }\n    };\n    loadSpecialOfferData();\n  }, [params.id]);\n\n  const getButton = () => {\n    if (acceptTerms) {\n      return (\n        <Button\n          variant=\"outlined\"\n          size=\"large\"\n          color=\"primary\"\n          onClick={() => (window.location.href = \"/\")}\n        >\n          Vahvista tilaus\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          variant=\"outlined\"\n          size=\"large\"\n          color=\"primary\"\n          disabled\n          //onClick={() => (window.location.href = \"/\")}\n        >\n          Vahvista tilaus\n        </Button>\n      );\n    }\n  };\n\n  if (specialOffer === null) {\n    return (\n      <div>\n        <h1>Loading special offer data.</h1>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <div>\n          <h1>Tilauksen tiedot:</h1>\n          <div className=\"TextContainer\">\n            <form\n              style={{ textAlign: \"left\", marginBottom: 30 }}\n              autoComplete=\"false\"\n            >\n              <h3>Siivoustarjouksen tiedot:</h3>\n              <SpecialOfferDataBox specialOffer={specialOffer} />\n            </form>\n            <form style={{ textAlign: \"left\" }}>\n              <h3>Asiakkaan tiedot:</h3>\n              <div>\n                <TextField\n                  className={styles.formControl}\n                  required\n                  id=\"orderform_firstname\"\n                  label=\"Etunimi\"\n                  placeholder=\"Etunimi\"\n                  variant=\"outlined\"\n                />\n                <TextField\n                  className={styles.formControl}\n                  required\n                  id=\"orderform_lastname\"\n                  label=\"Sukunimi\"\n                  placeholder=\"Sukunimi\"\n                  variant=\"outlined\"\n                />\n              </div>\n              <div>\n                <TextField\n                  className={styles.formControl}\n                  required\n                  id=\"orderfrom_address\"\n                  label=\"Osoite\"\n                  placeholder=\"Osoite\"\n                  variant=\"outlined\"\n                />\n              </div>\n              <div>\n                <TextField\n                  className={styles.formControl}\n                  required\n                  id=\"orderform_postcode\"\n                  label=\"Postinumero\"\n                  placeholder=\"Postinumero\"\n                  variant=\"outlined\"\n                />\n                <TextField\n                  className={styles.formControl}\n                  required\n                  id=\"orderform_city\"\n                  label=\"Postitoimipaikka\"\n                  placeholder=\"Postitoimipaikka\"\n                  variant=\"outlined\"\n                />\n              </div>\n              <div>\n                <TextField\n                  className={styles.formControl}\n                  id=\"orderform_phone\"\n                  label=\"Puhelinnumero\"\n                  placeholder=\"Puhelinnumero\"\n                  variant=\"outlined\"\n                />\n              </div>\n              <div>\n                <TextField\n                  className={styles.formControl}\n                  required\n                  id=\"orderform_email\"\n                  type=\"email\"\n                  label=\"Sähköpostiosoite\"\n                  placeholder=\"Sähköpostiosoite\"\n                  variant=\"outlined\"\n                />\n              </div>\n              <TextField\n                className={styles.formControl}\n                id=\"orderform_optionalinfo\"\n                label=\"Lisätietoa\"\n                fullWidth\n                multiline\n                rows={4}\n                rowsMax={7}\n                placeholder=\"Tähän voit antaa lisätietoa, esimerkiksi onko asunnossa lemmikkejä.\"\n                variant=\"outlined\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={acceptTerms}\n                    onChange={() => setAcceptTerms(!acceptTerms)}\n                    name=\"accept_terms\"\n                  />\n                }\n                label=\"Hyväksyn tilausehdot ja tietosuojakäytännöt.\"\n              />\n              <Link to=\"/privacy\">Tietosuojaseloste</Link>\n            </form>\n          </div>\n        </div>\n        <div className=\"bottomButtons\">{getButton()}</div>\n      </div>\n    );\n  }\n};\n\nexport default OrderForm;\n","import React from \"react\";\nimport \"./styles/TextPage.css\";\n\nconst PrivacyPolicy = () => {\n  return (\n    <div>\n      <h1>Tietosuojaseloste</h1>\n      <div className=\"TextContainer\">\n        <h3>Rekisterinpitäjä</h3>\n        <p>Yritys: Yritys Oy</p>\n        <p>Y-tunnus: 2585123-1</p>\n        <p>Osoite: Miilutie 3, 4.krs</p>\n        <p>Postinumero: 00420 </p>\n        <p>Postitoimipaikka: HELSINKI</p>\n        <p>Puhelinnumero: 040 155 3330</p>\n        <p>Sähköpostiosoite: tuki@sivusto.fi</p>\n        <h3>Rekisteriasioita hoitava henkilö</h3>\n        <p>Yritys: Yritys Oy</p>\n        <p>Nimi: Pentti Mikkonen</p>\n        <p>Puhelinnumero: 040 155 3330 </p>\n        <p>Sähköposti: tuki@sivusto.fi</p>\n        <h3>Rekisterin nimi</h3>\n        <p>Yrityksen asiakasrekisteri</p>\n        <h3>Rekisterin käyttötarkoitus</h3>\n        <p>\n          Kerättäviä henkilötietoja käytetään: Asiakkaan tunnistautumiseen ja\n          käyttöoikeuksien hallintaan. Asiakkaan tilausten toimittamiseen ja\n          asiakassuhteen ylläpitoon sekä kehittämiseen.\n        </p>\n        <h3>Tietojen keräämisen ja käsittelyn oikeusperusteet</h3>\n        <p>\n          Asiakkaan tietoja kerätään ja käsitellään asiakkaan antaman\n          suostumuksen perusteella, tai asiakkaan kanssa tehtävän sopimuksen\n          täytäntöön panemiseksi.\n        </p>\n        <h3>Rekisterin sisältämät tiedot</h3>\n        <p>\n          Rekisterissä säilytettävät tiedot ovat asiakkaan itse antamia tai\n          asiakkaan palvelussa suorittamien toimien perusteella tallennettuja.\n          Rekisterissä säilytetään seuraavat tiedot: Nimi, Osoite,\n          Sähköpostiosoite, Puhelinnumero, Salasana ja Tilaustiedot sekä\n          mahdollisesti muita asiakkaan ilmoittamia asiakassuhteen hoitoon\n          liittyviä tietoja.\n        </p>\n        <h3>Tietojen korjaaminen ja poistaminen</h3>\n        <p>\n          Asiakas voi korjata tietojaan itse ollessaan sisäänkirjautuneena\n          käyttäjätilillään. Yritys Oy voi asiakkaan pyynnöstä korjata ja\n          täydentää asiakkaan tietoja, jotka ovat virheellisiä, puutteellisia\n          tai vanhentuneita. Asiakkaalla on oikeus pyytää tietojensa poistamista\n          rekisteristä.\n        </p>\n        <h3>Tietojen säilytysaika</h3>\n        <p>\n          Henkilötiedot säilytetään niin kauan kuin niitä tarvitaan asiakkaan\n          kanssa tehtävän sopimuksen täytäntöönpanemiseksi, asiakassuhteen\n          hoitamiseksi tai niin kauan kuin käyttäjätili on olemassa. Asiakas voi\n          halutessaan pyytää tietojensa poistamista rekisteristä.\n        </p>\n        <h3>Tietolähteet</h3>\n        <p>\n          Rekisterissä olevat tiedot ovat lähtöisin asiakkaalta itseltään.\n          Asiakas myös vastaa antamiensa tietojen oikeellisuudesta. Yritys Oy ei\n          tarkista rekisterissä olevien tietojen oikeellisuutta ulkopuolisista\n          lähteistä.\n        </p>\n        <h3>Tietojen luovutus</h3>\n        <p>Rekisterissä olevia tietoja ei luovuteta ulkopuolisille tahoille.</p>\n        <h3>Rekisterin suojauksen periaatteet</h3>\n        <p>\n          Henkilötietoja sisältävä tietokanta on asianmukaisesti suojatulla\n          palvelimella ja tietokantaa käsittelevät vain henkilöt, joilla on\n          tehtäviensä vuoksi valtuudet tietokannan käsittelyyn. Rekisterinpitäjä\n          on rajannut käyttöoikeudet sivuston järjestelmiin niin, että vain\n          asianomaisilla henkilöillä on pääsy rekisterin tietoihin. Vain\n          sivuston nimetyillä ylläpitäjillä on oikeudet käsitellä kaikkia\n          rekisterissä olevia tietoja. Sivuston palveluntarjoajat käsittelevät\n          rekisterissä olevia käyttäjätietoja vain silloin kun käyttäjän\n          toiminta edellyttää heiltä sitä.\n          <br />\n          <br />\n        </p>\n\n        <p>Tämä tietosuojaseloste on päivitetty 10.3.2021.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default PrivacyPolicy;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  TextField,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  OutlinedInput,\n  InputAdornment,\n  Button,\n  FormGroup,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BackendConnection from \"./BackendConnection\";\nimport \"./styles/TextPage.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    minWidth: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst OfferRequest = () => {\n  const styles = useStyles();\n\n  const [companyData, setCompanyData] = useState([]);\n\n  const [apartmentType, setApartmentType] = useState(\"\");\n  const [apartmentArea, setApartmentArea] = useState(\"\");\n  const [frequency, setFrequency] = useState(\"\");\n  const [suppliers, setSuppliers] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [postcode, setPostcode] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [additionalInfo, setAdditionalInfo] = useState(\"\");\n\n  // Load all companies from database\n  const loadCompanyData = async () => {\n    const temp = await BackendConnection.getAllCompanies();\n    if (temp.length > 0) {\n      const tempArr = [];\n      temp.forEach((comp) => {\n        tempArr.push({ name: comp.name, isChecked: false });\n      });\n      setCompanyData(tempArr);\n    }\n  };\n\n  // Load companies from db only once\n  useEffect(() => {\n    loadCompanyData();\n  }, []);\n\n  // Check that all fields have value and email includes substring '@'\n  // Additional info can be empty\n  const checkValues = () => {\n    if (\n      suppliers !== \"\" &&\n      apartmentType !== \"\" &&\n      apartmentArea !== \"\" &&\n      frequency !== \"\" &&\n      firstName !== \"\" &&\n      lastName !== \"\" &&\n      phone !== \"\" &&\n      address !== \"\" &&\n      postcode !== \"\" &&\n      city !== \"\" &&\n      email !== \"\" &&\n      email.indexOf(\"@\") > 0\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  const sendOfferRequest = () => {\n    if (checkValues()) {\n      console.log(`Posting values:\n      ${apartmentType}\n      ${apartmentArea}\n      ${frequency}\n      ${suppliers}\n      ${firstName}\n      ${lastName}\n      ${phone}\n      ${additionalInfo}\n      ${address}\n      ${postcode}\n      ${city}\n      ${email}`);\n      BackendConnection.postNewOfferRequest({\n        apartment_type: apartmentType,\n        apartment_area: apartmentArea,\n        cleaning_frequency: frequency,\n        request_suppliers: suppliers,\n        optional_information: additionalInfo,\n        first_name: firstName,\n        last_name: lastName,\n        street_address: address,\n        city: city,\n        postcode: postcode,\n        phone: phone,\n        email: email,\n      });\n      window.location.href = \"/\";\n    } else {\n      alert(\"Tarkista että kaikki kentät on täytetty oikein.\");\n    }\n  };\n\n  // Get string value of all suppliers that are checked by customer\n  const getRequestedSuppliers = () => {\n    var tempStr = \"\";\n    companyData.forEach((comp) => {\n      if (comp.isChecked === true) {\n        console.log(\"adding company to supplierlist\");\n        tempStr += comp.name + \" \";\n      }\n    });\n    console.log(`String is now: ${tempStr}`);\n    setSuppliers(tempStr);\n    return tempStr;\n  };\n\n  // Update suppliers hook when companyData changes\n  useEffect(() => {\n    getRequestedSuppliers();\n  }, [companyData]);\n\n  // TODO: show error when none of the companies are checked\n  const error = [companyData].filter((v) => v.isChecked === true).length < 1;\n\n  const showCompaniesList = () => {\n    const ui = companyData.map((comp) => {\n      //console.log(comp);\n      return (\n        <FormControlLabel\n          key={comp.name}\n          control={\n            <Checkbox\n              checked={comp.isChecked}\n              onChange={(event) => {\n                console.log(event.target.name);\n                console.log(event.target.checked);\n                const temp = companyData.map((comp) => {\n                  if (comp.name === event.target.name) {\n                    comp = {\n                      name: comp.name,\n                      isChecked: !comp.isChecked,\n                    };\n                    return comp;\n                  } else {\n                    return comp;\n                  }\n                });\n                setCompanyData(temp);\n              }}\n              name={comp.name}\n            />\n          }\n          label={comp.name}\n        />\n      );\n    });\n    return ui;\n  };\n\n  return (\n    <div>\n      <div>\n        <h1>Pyydä tarjous:</h1>\n        <div className=\"TextContainer\">\n          <form\n            style={{ textAlign: \"left\", marginBottom: 30 }}\n            autoComplete=\"false\"\n          >\n            <h3>Siivottavan kohteen tiedot</h3>\n            <FormControl variant=\"outlined\" className={styles.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                Asuntotyyppi\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={apartmentType}\n                onChange={(event) => setApartmentType(event.target.value)}\n                //onChange={handleChange}\n                label=\"Asuntotyyppi\"\n              >\n                <MenuItem value=\"\" disabled>\n                  Valitse asuntotyyppi\n                </MenuItem>\n                <MenuItem value={\"kerrostalo\"}>Kerrostalo</MenuItem>\n                <MenuItem value={\"omakotitalo\"}>Omakotitalo</MenuItem>\n                <MenuItem value={\"rivitalo\"}>Rivitalo</MenuItem>\n                <MenuItem value={\"muu asunto\"}>Muu asuntotyyppi</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl variant=\"outlined\" className={styles.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                Asuinpinta-ala\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-weight\"\n                value={apartmentArea}\n                onChange={(event) => setApartmentArea(event.target.value)}\n                endAdornment={\n                  <InputAdornment position=\"end\">m2</InputAdornment>\n                }\n                label=\"Asuinpinta-ala\"\n              />\n            </FormControl>\n            <FormControl variant=\"outlined\" className={styles.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                Siivoustiheys\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={frequency}\n                onChange={(event) => setFrequency(event.target.value)}\n                //onChange={handleChange}\n                label=\"Siivoustiheys\"\n              >\n                <MenuItem value=\"\" disabled>\n                  Valitse siivoustiheys\n                </MenuItem>\n                <MenuItem value={\"kerran\"}>Kertasiivous</MenuItem>\n                <MenuItem value={\"1 / vko\"}>1 kerran viikossa</MenuItem>\n                <MenuItem value={\"2 / kk\"}>2 kertaa kuukaudessa</MenuItem>\n                <MenuItem value={\"1 /kk\"}>1 kerran kuukaudessa</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl\n              required\n              error={error}\n              component=\"fieldset\"\n              className={styles.formControl}\n            >\n              <FormLabel component=\"legend\">\n                Valitse palveluntarjoajat, joilta tahdot tarjouksen\n              </FormLabel>\n              <FormGroup>{showCompaniesList()}</FormGroup>\n              {/* <FormHelperText display={error}>\n                Valitse vähintään yksi palveluntarjoaja\n              </FormHelperText> */}\n            </FormControl>\n            <TextField\n              className={styles.formControl}\n              id=\"standard-required\"\n              label=\"Lisätietoa\"\n              fullWidth\n              multiline\n              rows={4}\n              rowsMax={7}\n              placeholder=\"Tähän voit antaa lisätietoa, esimerkiksi onko asunnossa lemmikkejä.\"\n              variant=\"outlined\"\n              onChange={(event) => setAdditionalInfo(event.target.value)}\n            />\n          </form>\n          <form style={{ textAlign: \"left\" }}>\n            <h3>Asiakkaan tiedot:</h3>\n            <div>\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"standard-required\"\n                label=\"Etunimi\"\n                placeholder=\"Etunimi\"\n                variant=\"outlined\"\n                onChange={(event) => setFirstName(event.target.value)}\n              />\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"standard-required\"\n                label=\"Sukunimi\"\n                placeholder=\"Sukunimi\"\n                variant=\"outlined\"\n                onChange={(event) => setLastName(event.target.value)}\n              />\n            </div>\n            <div>\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"standard-required\"\n                label=\"Osoite\"\n                placeholder=\"Osoite\"\n                variant=\"outlined\"\n                onChange={(event) => setAddress(event.target.value)}\n              />\n            </div>\n            <div>\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"standard-required\"\n                label=\"Postinumero\"\n                placeholder=\"Postinumero\"\n                variant=\"outlined\"\n                onChange={(event) => setCity(event.target.value)}\n              />\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"standard-required\"\n                label=\"Postitoimipaikka\"\n                placeholder=\"Postitoimipaikka\"\n                variant=\"outlined\"\n                onChange={(event) => setPostcode(event.target.value)}\n              />\n            </div>\n            <div>\n              <TextField\n                className={styles.formControl}\n                id=\"standard-required\"\n                label=\"Puhelinnumero\"\n                placeholder=\"Puhelinnumero\"\n                variant=\"outlined\"\n                onChange={(event) => setPhone(event.target.value)}\n              />\n            </div>\n            <div>\n              <TextField\n                className={styles.formControl}\n                required\n                id=\"standard-required\"\n                label=\"Sähköpostiosoite\"\n                placeholder=\"Sähköpostiosoite\"\n                variant=\"outlined\"\n                onChange={(event) => setEmail(event.target.value)}\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n      <div className=\"bottomButtons\">\n        <Button\n          variant=\"outlined\"\n          size=\"large\"\n          color=\"primary\"\n          onClick={sendOfferRequest}\n        >\n          Lähetä\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default OfferRequest;\n","import { TextField, Button, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState, useEffect } from \"react\";\nimport BackendConnection from \"./BackendConnection.js\";\nimport \"./styles/TextPage.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    //margin: theme.spacing(1),\n    minWidth: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst CreateSpecialOffer = ({ companyId }) => {\n  const styles = useStyles();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  //TODO: Change duration to real duration\n  const [duration, setDuration] = useState(0);\n\n  const handleClick = () => {\n    //TODO: send special order data and create new special offer\n    const offer = {\n      supplier_id: companyId,\n      product_name: title,\n      product_description: description,\n      product_price: price,\n      ends_at: \"2021-05-20\",\n      work_hours: duration,\n      product_is_available: 1,\n    };\n    //console.log(JSON.stringify(offer));\n    if (checkValues()) {\n      console.log(\"create new special offer and go to companyfront\");\n      BackendConnection.postSpecialOffer({\n        supplier_name: \"Siivouspojat Oy\",\n        product_name: \"Testitarjous\",\n        product_description: \"Astetta parempi imurointi\",\n        product_price: 100,\n        ends_at: null,\n        work_hours: 5.5,\n        is_available: true,\n      });\n      window.location.href = \"/mypage/company\";\n    } else {\n      alert(\"Tarkista pikatarjouksen tiedot\");\n    }\n  };\n\n  // Checking that title and description have content and price is positive\n  const checkValues = () => {\n    return title !== \"\" && description !== \"\" && price >= 0 && duration >= 0;\n  };\n\n  return (\n    <div>\n      <h1>Luo uusi pikatarjous:</h1>\n      <div className=\"TextContainer\">\n        <form\n          style={{ textAlign: \"left\", marginBottom: 30 }}\n          autoComplete=\"false\"\n        >\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"special-offer-title\"\n            label=\"Otsikko\"\n            placeholder=\"Otsikko\"\n            variant=\"outlined\"\n            onChange={(event) => setTitle(event.target.value)}\n          />\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"special-offer-time\"\n            label=\"Kesto\"\n            placeholder=\"Kesto\"\n            variant=\"outlined\"\n            onChange={(event) =>\n              setDuration(parseFloat(event.target.value).toFixed(2))\n            }\n          />\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"special-offer-price\"\n            label=\"Hinta\"\n            placeholder=\"Hinta\"\n            variant=\"outlined\"\n            onChange={(event) =>\n              setPrice(parseFloat(event.target.value).toFixed(2))\n            }\n          />\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"description\"\n            label=\"Kuvaus\"\n            fullWidth\n            multiline\n            rows={4}\n            rowsMax={7}\n            placeholder=\"Anna tarkempi kuvaus siivouksen yksityiskohdista.\"\n            variant=\"outlined\"\n            onChange={(event) => setDescription(event.target.value)}\n          />\n        </form>\n        <Grid className={styles.info} container spacing={1} p={2} m={2}>\n          <Grid item xs={6} ml={2}>\n            <Button\n              variant=\"outlined\"\n              size=\"large\"\n              color=\"primary\"\n              fullWidth\n              onClick={() => (window.location.href = \"/mypage/company\")}\n            >\n              Takaisin\n            </Button>\n          </Grid>\n          <Grid item xs={6}>\n            <Button\n              variant=\"outlined\"\n              size=\"large\"\n              color=\"primary\"\n              fullWidth\n              onClick={handleClick}\n            >\n              Luo pikatarjous\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateSpecialOffer;\n","import { Button, Grid, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState, useEffect } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  backButton: {\n    textAlign: \"center\",\n    marginTop: 15,\n  },\n  leftColumn: {\n    textAlign: \"right\",\n  },\n  rightColumn: {\n    textAlign: \"left\",\n  },\n}));\n\nconst CompanySpecialOffer = ({ specialOffer }) => {\n  const styles = useStyles();\n\n  if (specialOffer !== null) {\n    return (\n      <Box border={1} m={1} p={2}>\n        <Grid className={styles.info} container spacing={1} p={2} mb={2}>\n          <Grid className={styles.leftColumn} item xs={5}>\n            ID:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {specialOffer.product_id}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Otsikko:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {specialOffer.product_name}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Kuvaus:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {specialOffer.product_description}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Siivoustunnit:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {specialOffer.work_hours}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Kokonaishinta:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {specialOffer.product_price}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Luotu:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {specialOffer.created_at}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Päättyy:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {specialOffer.ends_at}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Tarjous voimassa:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {specialOffer.product_is_available}\n          </Grid>\n        </Grid>\n        <div className={styles.backButton}>\n          <Button\n            variant=\"outlined\"\n            size=\"large\"\n            color=\"primary\"\n            //   onClick={() =>\n            //     (window.location.href = \"/mypage/company/myspecialoffers\")\n            //   }\n          >\n            Muokkaa\n          </Button>\n        </div>\n      </Box>\n    );\n  }\n};\n\nexport default CompanySpecialOffer;\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport BackendConnection from \"./BackendConnection\";\nimport CompanySpecialOffer from \"./CompanySpecialOffer\";\n\nconst MySpecialOffers = ({ companyId }) => {\n  const [specialOffers, setSpecialOffers] = useState([]);\n\n  const loadSpecialOffers = async () => {\n    console.log(\"loading all special offers now once\");\n    let specOffers = await BackendConnection.getAllSpecialOffers();\n    if (specOffers.length > 0) {\n      // TODO: change this to filter values with companyId props\n      let temp = specOffers.filter((spec) => spec.supplier_id === 2);\n      if (temp.length > 0) {\n        temp = temp.reverse();\n        setSpecialOffers(temp);\n      }\n    }\n  };\n\n  useEffect(() => {\n    loadSpecialOffers();\n  }, []);\n\n  const showSpecialOfferList = () => {\n    return specialOffers.map((spec) => {\n      return <CompanySpecialOffer key={spec.product_id} specialOffer={spec} />;\n    });\n  };\n\n  if (specialOffers.length === 0) {\n    return (\n      <div>\n        <h3>Et ole luonut vielä pikatarjouksia.</h3>\n        <Button\n          variant=\"outlined\"\n          size=\"large\"\n          color=\"primary\"\n          onClick={() => (window.location.href = \"/mypage/company\")}\n        >\n          Takaisin\n        </Button>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <h3>Omat pikatarjoukset:</h3>\n        {showSpecialOfferList()}\n        <Button\n          variant=\"outlined\"\n          size=\"large\"\n          color=\"primary\"\n          onClick={() => (window.location.href = \"/mypage/company\")}\n        >\n          Takaisin\n        </Button>\n      </div>\n    );\n  }\n};\n\nexport default MySpecialOffers;\n","import { Grid, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState, useEffect } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  backButton: {\n    textAlign: \"center\",\n  },\n  leftColumn: {\n    textAlign: \"right\",\n  },\n  rightColumn: {\n    textAlign: \"left\",\n  },\n}));\n\nconst CompOffReqBox = ({ offerReq, isCompany }) => {\n  const styles = useStyles();\n  const [offerRequest, setOfferRequest] = useState(offerReq);\n  const [companyDetails, setCompanyDetails] = useState(isCompany);\n\n  const showUserSpecificData = () => {\n    if (companyDetails) {\n      return (\n        <Grid className={styles.info} container spacing={1} p={2} mb={2}>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Asiakas:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {offerRequest.first_name} {offerRequest.last_name}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Osoite:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {offerRequest.street_address}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Postinumero:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {offerRequest.postcode}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Postitoimipaikka:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {offerRequest.city}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Puhelinnumero:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {offerRequest.phone}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Sähköpostiosoite:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {offerRequest.email}\n          </Grid>\n        </Grid>\n      );\n    } else {\n      return (\n        <Grid className={styles.info} container spacing={1} p={2} mb={2}>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Yritykset:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {offerRequest.request_suppliers}\n          </Grid>\n        </Grid>\n      );\n    }\n  };\n\n  if (offerReq !== null) {\n    return (\n      <Box border={1} m={1} p={2}>\n        <Grid className={styles.info} container spacing={1} p={2} mb={2}>\n          <Grid className={styles.leftColumn} item xs={5}>\n            ID:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {offerRequest.request_id}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Asuntotyyppi:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {offerRequest.apartment_type}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Asunnon pinta-ala:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {offerRequest.apartment_area}\n          </Grid>\n          <Grid className={styles.leftColumn} item xs={5}>\n            Siivoustiheys:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {offerRequest.cleaning_frequency}\n          </Grid>\n          {showUserSpecificData()}\n          <Grid className={styles.leftColumn} item xs={5}>\n            Lisätietoa:\n          </Grid>\n          <Grid className={styles.rightColumn} item xs={7}>\n            {offerRequest.optional_information}\n          </Grid>\n        </Grid>\n      </Box>\n    );\n  }\n};\n\nexport default CompOffReqBox;\n","import { Button, Grid, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState, useEffect } from \"react\";\nimport BackendConnection from \"./BackendConnection\";\nimport \"./styles/TextPage.css\";\nimport CompOffReqBox from \"./CompOffReqBox\";\n\nconst useStyles = makeStyles((theme) => ({\n  backButton: {\n    textAlign: \"center\",\n  },\n}));\n\nconst CompanyOfferRequests = ({ supplierName }) => {\n  const styles = useStyles();\n  const [offerRequests, setOfferRequests] = useState([]);\n\n  const compName = \"Siivouspojat\";\n\n  const loadOfferRequests = async () => {\n    console.log(\"loading offer request now once\");\n    let offerReqs = await BackendConnection.getOfferRequestsBySupplier(\n      compName\n    );\n    if (offerReqs.length > 0) {\n      // Reverse result array because we want to show newest offer requests first\n      offerReqs = offerReqs.reverse();\n      setOfferRequests(offerReqs);\n    }\n  };\n\n  useEffect(() => {\n    loadOfferRequests();\n  }, []);\n\n  const showOfferList = () => {\n    return offerRequests.map((req) => {\n      return (\n        <CompOffReqBox key={req.request_id} offerReq={req} isCompany={true} />\n      );\n    });\n  };\n\n  if (offerRequests.length === 0) {\n    return <div>No offer requests yet.</div>;\n  } else {\n    return (\n      <div>\n        <h1>Tässä saapuneet tarjouspyynnöt:</h1>\n        {showOfferList()}\n        <Button\n          variant=\"outlined\"\n          size=\"large\"\n          color=\"primary\"\n          onClick={() => (window.location.href = \"/mypage/company\")}\n        >\n          Takaisin\n        </Button>\n      </div>\n    );\n  }\n};\n\nexport default CompanyOfferRequests;\n","import { TextField, Button, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState, useEffect } from \"react\";\nimport BackendConnection from \"./BackendConnection.js\";\nimport \"./styles/TextPage.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    //margin: theme.spacing(1),\n    minWidth: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst ModifyCompanyData = ({ companyId }) => {\n  // const exampledata = {\n  //   id: 1,\n  //   name: \"Siivouspojat Ab\",\n  //   contactPerson: \"Jussi Mäkinen\",\n  //   phone: \"040 5544671\",\n  //   street_address: \"Mäkitie 3\",\n  //   postcode: \"36100\",\n  //   city: \"Tampere\",\n  //   email: \"asiakaspalvelu@siivouspojat.fi\",\n  //   supplier_description: \"Tehdään loistavaa jälkeä\",\n  // };\n\n  const [company, setCompany] = useState(null);\n\n  const styles = useStyles();\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [postcode, setPostcode] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const fillValues = (comp) => {\n    setName(comp.name);\n    setPhone(comp.phone);\n    setAddress(comp.street_address);\n    setPostcode(comp.postcode);\n    setCity(comp.city);\n    setEmail(comp.email);\n    setDescription(comp.supplier_description);\n  };\n\n  useEffect(() => {\n    // Load all companies from database and search with given props companyId\n    const loadCompanyData = async () => {\n      const temp = await BackendConnection.getAllCompanies();\n      if (temp.length > 0) {\n        temp.filter((comp) => comp.supplier_id === companyId);\n        setCompany(temp[0]);\n        fillValues(temp[0]);\n      }\n    };\n    loadCompanyData();\n  }, [companyId]);\n\n  const handleClick = () => {\n    //TODO: send modified data to db\n\n    if (checkValues()) {\n      console.log(\"post modification and go to companyfront\");\n      /*BackendConnection.postSpecialOffer({\n        product_name: title,\n        product_description: description,\n        product_price: 100,\n      });*/\n      window.location.href = \"/mypage/company\";\n    } else {\n      alert(\"Jokin kenttä on jätetty tyhjäksi, tarkista tiedot.\");\n    }\n  };\n\n  // Checking that title and description have content and price is positive\n  const checkValues = () => {\n    return (\n      name !== \"\" &&\n      description !== \"\" &&\n      phone !== \"\" &&\n      postcode !== \"\" &&\n      address !== \"\" &&\n      city !== \"\" &&\n      email !== \"\"\n    );\n  };\n  if (company === null) {\n    return (\n      <div>\n        <h2>Loading data</h2>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <h1>Muokkaa yrityksen tietoja:</h1>\n        <div className=\"TextContainer\">\n          <form\n            style={{ textAlign: \"left\", marginBottom: 30 }}\n            autoComplete=\"false\"\n          >\n            <TextField\n              className={styles.formControl}\n              required\n              id=\"modify-name\"\n              label=\"Yrityksen nimi\"\n              //placeholder=\"Yrityksen nimi\"\n              value={name}\n              variant=\"outlined\"\n              onChange={(event) => setName(event.target.value)}\n            />\n            <TextField\n              className={styles.formControl}\n              required\n              id=\"modify-phone\"\n              label=\"Puhelinnumero\"\n              //placeholder=\"Puhelinnumero\"\n              value={phone}\n              variant=\"outlined\"\n              onChange={(event) => setPhone(event.target.value)}\n            />\n            <TextField\n              className={styles.formControl}\n              required\n              id=\"modify-address\"\n              label=\"Osoite\"\n              //placeholder=\"Osoite\"\n              value={address}\n              variant=\"outlined\"\n              onChange={(event) => setAddress(event.target.value)}\n            />\n            <TextField\n              className={styles.formControl}\n              required\n              id=\"modify-postcode\"\n              label=\"Postinumero\"\n              //placeholder=\"Postinumero\"\n              value={postcode}\n              variant=\"outlined\"\n              onChange={(event) => setPostcode(event.target.value)}\n            />\n            <TextField\n              className={styles.formControl}\n              required\n              id=\"modify-city\"\n              label=\"Postitoimipaikka\"\n              //placeholder=\"Postitoimipaikka\"\n              value={city}\n              variant=\"outlined\"\n              onChange={(event) => setCity(event.target.value)}\n            />\n            <TextField\n              className={styles.formControl}\n              required\n              id=\"modify-email\"\n              label=\"Sähköpostiosoite\"\n              //placeholder=\"Sähköpostiosoite\"\n              value={email}\n              variant=\"outlined\"\n              onChange={(event) => setEmail(event.target.value)}\n            />\n            {/* <TextField\n              className={styles.formControl}\n              required\n              id=\"modify-description\"\n              label=\"Kuvaus\"\n              fullWidth\n              multiline\n              rows={4}\n              rowsMax={7}\n              placeholder=\"Yrityksen kuvaus\"\n              variant=\"outlined\"\n              onChange={(event) => setDescription(event.target.value)}\n            /> */}\n          </form>\n          <Grid className={styles.info} container spacing={1} p={2} m={2}>\n            <Grid item xs={6} ml={2}>\n              <Button\n                variant=\"outlined\"\n                size=\"large\"\n                color=\"primary\"\n                fullWidth\n                onClick={() => (window.location.href = \"/mypage/company\")}\n              >\n                Takaisin\n              </Button>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"outlined\"\n                size=\"large\"\n                color=\"primary\"\n                fullWidth\n                onClick={handleClick}\n              >\n                Tallenna muutokset\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default ModifyCompanyData;\n","import { TextField, Button, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState, useEffect } from \"react\";\nimport BackendConnection from \"./BackendConnection.js\";\nimport \"./styles/TextPage.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    //margin: theme.spacing(1),\n    minWidth: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst ModifyCustomerData = ({ customerId }) => {\n  const [customer, setCustomer] = useState(null);\n\n  const styles = useStyles();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [postcode, setPostcode] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const fillValues = (cust) => {\n    setFirstName(cust.first_name);\n    setLastName(cust.last_name);\n    setPhone(cust.phone);\n    setAddress(cust.street_address);\n    setPostcode(cust.postcode);\n    setCity(cust.city);\n    setEmail(cust.email);\n  };\n\n  useEffect(() => {\n    // Load all companies from database and search with given props companyId\n    const loadCompanyData = async () => {\n      const temp = await BackendConnection.getAllCustomers();\n      if (temp.length > 0) {\n        temp.filter((cust) => cust.customer_id === customerId);\n        setCustomer(temp[0]);\n        fillValues(temp[0]);\n      }\n    };\n    loadCompanyData();\n  }, [customerId]);\n\n  const handleClick = () => {\n    //TODO: send modified data to db\n\n    if (checkValues()) {\n      console.log(\"post modification and go to customerfront\");\n      /*BackendConnection.postSpecialOffer({\n        product_name: title,\n        product_description: description,\n        product_price: 100,\n      });*/\n      window.location.href = \"/mypage/customer\";\n    } else {\n      alert(\"Jokin kenttä on jätetty tyhjäksi, tarkista tiedot.\");\n    }\n  };\n\n  // Checking that title and description have content and price is positive\n  const checkValues = () => {\n    return (\n      firstName !== \"\" &&\n      lastName !== \"\" &&\n      phone !== \"\" &&\n      postcode !== \"\" &&\n      address !== \"\" &&\n      city !== \"\" &&\n      email !== \"\"\n    );\n  };\n  if (customer === null) {\n    return (\n      <div>\n        <h2>Loading data</h2>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <h1>Muokkaa asiakastietoja:</h1>\n        <div className=\"TextContainer\">\n          <form\n            style={{ textAlign: \"left\", marginBottom: 30 }}\n            autoComplete=\"false\"\n          >\n            <TextField\n              className={styles.formControl}\n              required\n              id=\"modify-firstname\"\n              label=\"Etunimi\"\n              value={firstName}\n              variant=\"outlined\"\n              onChange={(event) => setFirstName(event.target.value)}\n            />\n            <TextField\n              className={styles.formControl}\n              required\n              id=\"modify-lastname\"\n              label=\"Sukunimi\"\n              value={lastName}\n              variant=\"outlined\"\n              onChange={(event) => setLastName(event.target.value)}\n            />\n            <TextField\n              className={styles.formControl}\n              required\n              id=\"modify-phone\"\n              label=\"Puhelinnumero\"\n              value={phone}\n              variant=\"outlined\"\n              onChange={(event) => setPhone(event.target.value)}\n            />\n            <TextField\n              className={styles.formControl}\n              required\n              id=\"modify-address\"\n              label=\"Osoite\"\n              value={address}\n              variant=\"outlined\"\n              onChange={(event) => setAddress(event.target.value)}\n            />\n            <TextField\n              className={styles.formControl}\n              required\n              id=\"modify-postcode\"\n              label=\"Postinumero\"\n              value={postcode}\n              variant=\"outlined\"\n              onChange={(event) => setPostcode(event.target.value)}\n            />\n            <TextField\n              className={styles.formControl}\n              required\n              id=\"modify-city\"\n              label=\"Postitoimipaikka\"\n              value={city}\n              variant=\"outlined\"\n              onChange={(event) => setCity(event.target.value)}\n            />\n            <TextField\n              className={styles.formControl}\n              required\n              id=\"modify-email\"\n              label=\"Sähköpostiosoite\"\n              value={email}\n              variant=\"outlined\"\n              onChange={(event) => setEmail(event.target.value)}\n            />\n          </form>\n          <Grid className={styles.info} container spacing={1} p={2} m={2}>\n            <Grid item xs={6} ml={2}>\n              <Button\n                variant=\"outlined\"\n                size=\"large\"\n                color=\"primary\"\n                fullWidth\n                onClick={() => (window.location.href = \"/mypage/customer\")}\n              >\n                Takaisin\n              </Button>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"outlined\"\n                size=\"large\"\n                color=\"primary\"\n                fullWidth\n                onClick={handleClick}\n              >\n                Tallenna muutokset\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default ModifyCustomerData;\n","import { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState, useEffect } from \"react\";\nimport BackendConnection from \"./BackendConnection\";\nimport \"./styles/TextPage.css\";\nimport CompOffReqBox from \"./CompOffReqBox\";\n\nconst useStyles = makeStyles((theme) => ({\n  backButton: {\n    textAlign: \"center\",\n  },\n}));\n\nconst CustomerOfferRequests = ({ customerEmail }) => {\n  const styles = useStyles();\n  const [offerRequests, setOfferRequests] = useState([]);\n\n  const email = \"Siivouspojat\";\n\n  // TODO: change this to search offers by customer email\n  const loadOfferRequests = async () => {\n    console.log(\"loading offer request now once\");\n    let offerReqs = await BackendConnection.getOfferRequestsBySupplier(email);\n    if (offerReqs.length > 0) {\n      // Reverse result array because we want to show newest offer requests first\n      offerReqs = offerReqs.reverse();\n      setOfferRequests(offerReqs);\n    }\n  };\n\n  useEffect(() => {\n    loadOfferRequests();\n  }, []);\n\n  const showOfferList = () => {\n    return offerRequests.map((req) => {\n      return (\n        <CompOffReqBox key={req.request_id} offerReq={req} isCompany={false} />\n      );\n    });\n  };\n\n  if (offerRequests.length === 0) {\n    return (\n      <div>\n        <h3>Ei tarjouspyyntöjä vielä.</h3>\n        <Button\n          variant=\"outlined\"\n          size=\"large\"\n          color=\"primary\"\n          onClick={() => (window.location.href = \"/mypage/customer\")}\n        >\n          Takaisin\n        </Button>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <h1>Tässä saapuneet tarjouspyynnöt:</h1>\n        {showOfferList()}\n        <Button\n          variant=\"outlined\"\n          size=\"large\"\n          color=\"primary\"\n          onClick={() => (window.location.href = \"/mypage/customer\")}\n        >\n          Takaisin\n        </Button>\n      </div>\n    );\n  }\n};\n\nexport default CustomerOfferRequests;\n","import { TextField, Button, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\nimport HeaderComponent from \"./HeaderComponent\";\nimport BackendConnection from \"./BackendConnection.js\";\nimport \"./styles/TextPage.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    //margin: theme.spacing(1),\n    minWidth: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst Signup = () => {\n  const styles = useStyles();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [postcode, setPostcode] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleClick = () => {\n    if (checkValues()) {\n      console.log(\"post new customer and go to front page\");\n      BackendConnection.postNewCustomer({\n        first_name: firstName,\n        last_name: lastName,\n        street_address: address,\n        postcode: postcode,\n        city: city,\n        phone: phone,\n        email: email,\n        password: password,\n      });\n      window.location.href = \"/\";\n    } else {\n      alert(\"Jokin kenttä on jätetty tyhjäksi, tarkista tiedot.\");\n    }\n  };\n\n  // Checking that title and description have content and price is positive\n  const checkValues = () => {\n    return (\n      firstName !== \"\" &&\n      lastName !== \"\" &&\n      phone !== \"\" &&\n      postcode !== \"\" &&\n      address !== \"\" &&\n      city !== \"\" &&\n      email !== \"\" &&\n      password !== \"\"\n    );\n  };\n\n  return (\n    <div>\n      <h1>Luo uusi käyttäjätili:</h1>\n      <div className=\"TextContainer\">\n        <form\n          style={{ textAlign: \"left\", marginBottom: 30 }}\n          autoComplete=\"false\"\n        >\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"modify-firstname\"\n            label=\"Etunimi\"\n            //value={firstName}\n            variant=\"outlined\"\n            onChange={(event) => setFirstName(event.target.value)}\n          />\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"modify-lastname\"\n            label=\"Sukunimi\"\n            //value={lastName}\n            variant=\"outlined\"\n            onChange={(event) => setLastName(event.target.value)}\n          />\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"modify-phone\"\n            label=\"Puhelinnumero\"\n            //value={phone}\n            variant=\"outlined\"\n            onChange={(event) => setPhone(event.target.value)}\n          />\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"modify-address\"\n            label=\"Osoite\"\n            //value={address}\n            variant=\"outlined\"\n            onChange={(event) => setAddress(event.target.value)}\n          />\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"modify-postcode\"\n            label=\"Postinumero\"\n            //value={postcode}\n            variant=\"outlined\"\n            onChange={(event) => setPostcode(event.target.value)}\n          />\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"modify-city\"\n            label=\"Postitoimipaikka\"\n            //value={city}\n            variant=\"outlined\"\n            onChange={(event) => setCity(event.target.value)}\n          />\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"modify-email\"\n            label=\"Sähköpostiosoite\"\n            //value={email}\n            variant=\"outlined\"\n            onChange={(event) => setEmail(event.target.value)}\n          />\n          <TextField\n            className={styles.formControl}\n            required\n            id=\"modify-password\"\n            type=\"password\"\n            label=\"Salasana\"\n            //value={password}\n            variant=\"outlined\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </form>\n        <Grid className={styles.info} container spacing={1} p={2} m={2}>\n          <Grid item xs={6} ml={2}>\n            <Button\n              variant=\"outlined\"\n              size=\"large\"\n              color=\"primary\"\n              fullWidth\n              onClick={() => (window.location.href = \"/\")}\n            >\n              Takaisin\n            </Button>\n          </Grid>\n          <Grid item xs={6}>\n            <Button\n              variant=\"outlined\"\n              size=\"large\"\n              color=\"primary\"\n              fullWidth\n              onClick={handleClick}\n            >\n              Luo käyttäjätili\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","import \"./styles/App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport MainPage from \"./MainPage\";\nimport AdminPage from \"./AdminPage\";\nimport CompaniesPage from \"./CompaniesPage\";\nimport InfoPage from \"./InfoPage\";\nimport CustomerFront from \"./CustomerFront\";\nimport CompanyFront from \"./CompanyFront\";\nimport OrderForm from \"./OrderForm\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport PrivacyPolicy from \"./PrivacyPolicy.js\";\nimport OfferRequest from \"./OfferRequest\";\nimport CreateSpecialOffer from \"./CreateSpecialOffer\";\nimport MySpecialOffers from \"./MySpecialOffers\";\nimport CompanyOfferRequests from \"./CompanyOfferRequests\";\nimport HeaderComponent from \"./HeaderComponent\";\nimport ModifyCompanyData from \"./ModifyCompanyData\";\nimport BackendConnection from \"./BackendConnection\";\nimport ModifyCustomerData from \"./ModifyCustomerData\";\nimport CustomerOfferRequests from \"./CustomerOfferRequests\";\nimport Signup from \"./Signup\";\nimport AddSupplier from \"./AddSupplier\";\n\nconst App = () => {\n  // const exampleCompanyData = {\n  //   id: 1,\n  //   name: \"Yrityksen nimi\",\n  //   contactPerson: \"Yhteyshenkilö\",\n  //   phone: \"040 5544671\",\n  //   street_address: \"Katuosoite 3\",\n  //   postcode: \"36100\",\n  //   city: \"Tampere\",\n  //   email: \"example@email.com\",\n  //   description: \"Tehdään loistavaa jälkeä\",\n  //};\n  const [loggedInCompanyId, setLoggedInCompanyId] = useState(1);\n  const [loggedInCustomerId, setLoggedInCustomerId] = useState(1);\n  //const [loggedInCompany, setLoggedInCompany] = useState(exampleCompanyData);\n\n  // useEffect(() => {\n  //   const exampleCompanyData = {\n  //     id: 1,\n  //     name: \"Yrityksen nimi\",\n  //     contactPerson: \"Yhteyshenkilö\",\n  //     phone: \"040 5544671\",\n  //     street_address: \"Katuosoite 3\",\n  //     postcode: \"36100\",\n  //     city: \"Tampere\",\n  //     email: \"example@email.com\",\n  //     description: \"Tehdään loistavaa jälkeä\",\n  //   };\n  //   // Load all companies from database and search with given props companyId\n  //   const loadCompanyData = async () => {\n  //     const temp = await BackendConnection.getAllCompanies();\n  //     if (temp.length > 0) {\n  //       temp.filter((comp) => comp.supplier_id === loggedInCompanyId);\n  //       setLoggedInCompany(temp[0]);\n  //     } else {\n  //       setLoggedInCompany(exampleCompanyData);\n  //     }\n  //   };\n  //   loadCompanyData();\n  // }, [loggedInCompany, loggedInCompanyId]);\n\n  /* SessionStorage is not used now\n  const getToken = () => {\n    const tokenToString = sessionStorage.getItem(\"token\");\n    const userToken = JSON.parse(tokenToString);\n    return userToken?.token; // Note to self, ? is the optional chaining operator, won't throw error if token is undefined.\n  };\n\n  // Set session token from storage if exists.\n  const setToken = (userToken) => {\n    sessionStorage.setItem(\"token\", JSON.stringify(userToken));\n  };\n\n  if (!getToken) {\n    return <HeaderComponent setToken={setToken} />;\n  }\n  */\n  \n  const customerLogin = (id) => {\n    console.log(\"changin customerId in app.js to \" + id);\n    setLoggedInCustomerId(id);\n  };\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <HeaderComponent />\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route exact path=\"/info\">\n            <InfoPage />\n          </Route>\n          <Route exact path=\"/companies\">\n            <CompaniesPage />\n          </Route>\n          <Route exact path=\"/offerRequest\">\n            <OfferRequest />\n          </Route>\n          <Route path=\"/orderform/:id\">\n            <OrderForm />\n            {/* <OrderForm specialOfferId={1} /> */}\n          </Route>\n          <Route exact path=\"/privacy\">\n            <PrivacyPolicy />\n          </Route>\n          <Route exact path=\"/signup\">\n            <Signup />\n          </Route>\n          <Route exact path=\"/mypage/customer/modifydata\">\n            <ModifyCustomerData customerId={loggedInCustomerId} />\n          </Route>\n          <Route exact path=\"/mypage/customer/myofferrequests\">\n            <CustomerOfferRequests />\n          </Route>\n          <Route exact path=\"/mypage/customer\">\n            <CustomerFront customerId={loggedInCustomerId} />\n          </Route>\n          <Route exact path=\"/mypage/company/createspecialoffer\">\n            <CreateSpecialOffer companyId={loggedInCompanyId} />\n          </Route>\n          <Route exact path=\"/mypage/company/myspecialoffers\">\n            <MySpecialOffers />\n          </Route>\n          <Route exact path=\"/mypage/company/myofferrequests\">\n            <CompanyOfferRequests />\n          </Route>\n          <Route exact path=\"/mypage/company/modifydata\">\n            <ModifyCompanyData companyId={loggedInCompanyId} />\n          </Route>\n          <Route exact path=\"/mypage/company\">\n            <CompanyFront companyId={loggedInCompanyId} />\n          </Route>\n          <Route exact path=\"/admin/addsupplier\">\n            <AddSupplier />\n          </Route>\n          <Route exact path=\"/admin\">\n            <AdminPage />\n          </Route>\n          <Route exact path=\"/\">\n            <MainPage />\n          </Route>\n          <Route path=\"*\">\n            <MainPage />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}